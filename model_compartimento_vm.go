/*
 * Petrolifera API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CompartimentoVM struct for CompartimentoVM
type CompartimentoVM struct {
	Id NullableInt64 `json:"id,omitempty"`
	Numero NullableString `json:"numero,omitempty"`
	Tipo *TipoCompartimento `json:"tipo,omitempty"`
	Ativo NullableBool `json:"ativo,omitempty"`
	RefGvm NullableInt64 `json:"refGvm,omitempty"`
	RefProduto NullableInt64 `json:"refProduto,omitempty"`
	LivreSemProduto *bool `json:"livreSemProduto,omitempty"`
	CompartimentoBloqueado *bool `json:"compartimentoBloqueado,omitempty"`
	Vasilhame *bool `json:"vasilhame,omitempty"`
	Troca *bool `json:"troca,omitempty"`
}

// NewCompartimentoVM instantiates a new CompartimentoVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompartimentoVM() *CompartimentoVM {
	this := CompartimentoVM{}
	return &this
}

// NewCompartimentoVMWithDefaults instantiates a new CompartimentoVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompartimentoVMWithDefaults() *CompartimentoVM {
	this := CompartimentoVM{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompartimentoVM) GetId() int64 {
	if o == nil || o.Id.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompartimentoVM) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CompartimentoVM) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt64 and assigns it to the Id field.
func (o *CompartimentoVM) SetId(v int64) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CompartimentoVM) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CompartimentoVM) UnsetId() {
	o.Id.Unset()
}

// GetNumero returns the Numero field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompartimentoVM) GetNumero() string {
	if o == nil || o.Numero.Get() == nil {
		var ret string
		return ret
	}
	return *o.Numero.Get()
}

// GetNumeroOk returns a tuple with the Numero field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompartimentoVM) GetNumeroOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Numero.Get(), o.Numero.IsSet()
}

// HasNumero returns a boolean if a field has been set.
func (o *CompartimentoVM) HasNumero() bool {
	if o != nil && o.Numero.IsSet() {
		return true
	}

	return false
}

// SetNumero gets a reference to the given NullableString and assigns it to the Numero field.
func (o *CompartimentoVM) SetNumero(v string) {
	o.Numero.Set(&v)
}
// SetNumeroNil sets the value for Numero to be an explicit nil
func (o *CompartimentoVM) SetNumeroNil() {
	o.Numero.Set(nil)
}

// UnsetNumero ensures that no value is present for Numero, not even an explicit nil
func (o *CompartimentoVM) UnsetNumero() {
	o.Numero.Unset()
}

// GetTipo returns the Tipo field value if set, zero value otherwise.
func (o *CompartimentoVM) GetTipo() TipoCompartimento {
	if o == nil || o.Tipo == nil {
		var ret TipoCompartimento
		return ret
	}
	return *o.Tipo
}

// GetTipoOk returns a tuple with the Tipo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompartimentoVM) GetTipoOk() (*TipoCompartimento, bool) {
	if o == nil || o.Tipo == nil {
		return nil, false
	}
	return o.Tipo, true
}

// HasTipo returns a boolean if a field has been set.
func (o *CompartimentoVM) HasTipo() bool {
	if o != nil && o.Tipo != nil {
		return true
	}

	return false
}

// SetTipo gets a reference to the given TipoCompartimento and assigns it to the Tipo field.
func (o *CompartimentoVM) SetTipo(v TipoCompartimento) {
	o.Tipo = &v
}

// GetAtivo returns the Ativo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompartimentoVM) GetAtivo() bool {
	if o == nil || o.Ativo.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Ativo.Get()
}

// GetAtivoOk returns a tuple with the Ativo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompartimentoVM) GetAtivoOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Ativo.Get(), o.Ativo.IsSet()
}

// HasAtivo returns a boolean if a field has been set.
func (o *CompartimentoVM) HasAtivo() bool {
	if o != nil && o.Ativo.IsSet() {
		return true
	}

	return false
}

// SetAtivo gets a reference to the given NullableBool and assigns it to the Ativo field.
func (o *CompartimentoVM) SetAtivo(v bool) {
	o.Ativo.Set(&v)
}
// SetAtivoNil sets the value for Ativo to be an explicit nil
func (o *CompartimentoVM) SetAtivoNil() {
	o.Ativo.Set(nil)
}

// UnsetAtivo ensures that no value is present for Ativo, not even an explicit nil
func (o *CompartimentoVM) UnsetAtivo() {
	o.Ativo.Unset()
}

// GetRefGvm returns the RefGvm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompartimentoVM) GetRefGvm() int64 {
	if o == nil || o.RefGvm.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefGvm.Get()
}

// GetRefGvmOk returns a tuple with the RefGvm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompartimentoVM) GetRefGvmOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefGvm.Get(), o.RefGvm.IsSet()
}

// HasRefGvm returns a boolean if a field has been set.
func (o *CompartimentoVM) HasRefGvm() bool {
	if o != nil && o.RefGvm.IsSet() {
		return true
	}

	return false
}

// SetRefGvm gets a reference to the given NullableInt64 and assigns it to the RefGvm field.
func (o *CompartimentoVM) SetRefGvm(v int64) {
	o.RefGvm.Set(&v)
}
// SetRefGvmNil sets the value for RefGvm to be an explicit nil
func (o *CompartimentoVM) SetRefGvmNil() {
	o.RefGvm.Set(nil)
}

// UnsetRefGvm ensures that no value is present for RefGvm, not even an explicit nil
func (o *CompartimentoVM) UnsetRefGvm() {
	o.RefGvm.Unset()
}

// GetRefProduto returns the RefProduto field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CompartimentoVM) GetRefProduto() int64 {
	if o == nil || o.RefProduto.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefProduto.Get()
}

// GetRefProdutoOk returns a tuple with the RefProduto field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CompartimentoVM) GetRefProdutoOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefProduto.Get(), o.RefProduto.IsSet()
}

// HasRefProduto returns a boolean if a field has been set.
func (o *CompartimentoVM) HasRefProduto() bool {
	if o != nil && o.RefProduto.IsSet() {
		return true
	}

	return false
}

// SetRefProduto gets a reference to the given NullableInt64 and assigns it to the RefProduto field.
func (o *CompartimentoVM) SetRefProduto(v int64) {
	o.RefProduto.Set(&v)
}
// SetRefProdutoNil sets the value for RefProduto to be an explicit nil
func (o *CompartimentoVM) SetRefProdutoNil() {
	o.RefProduto.Set(nil)
}

// UnsetRefProduto ensures that no value is present for RefProduto, not even an explicit nil
func (o *CompartimentoVM) UnsetRefProduto() {
	o.RefProduto.Unset()
}

// GetLivreSemProduto returns the LivreSemProduto field value if set, zero value otherwise.
func (o *CompartimentoVM) GetLivreSemProduto() bool {
	if o == nil || o.LivreSemProduto == nil {
		var ret bool
		return ret
	}
	return *o.LivreSemProduto
}

// GetLivreSemProdutoOk returns a tuple with the LivreSemProduto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompartimentoVM) GetLivreSemProdutoOk() (*bool, bool) {
	if o == nil || o.LivreSemProduto == nil {
		return nil, false
	}
	return o.LivreSemProduto, true
}

// HasLivreSemProduto returns a boolean if a field has been set.
func (o *CompartimentoVM) HasLivreSemProduto() bool {
	if o != nil && o.LivreSemProduto != nil {
		return true
	}

	return false
}

// SetLivreSemProduto gets a reference to the given bool and assigns it to the LivreSemProduto field.
func (o *CompartimentoVM) SetLivreSemProduto(v bool) {
	o.LivreSemProduto = &v
}

// GetCompartimentoBloqueado returns the CompartimentoBloqueado field value if set, zero value otherwise.
func (o *CompartimentoVM) GetCompartimentoBloqueado() bool {
	if o == nil || o.CompartimentoBloqueado == nil {
		var ret bool
		return ret
	}
	return *o.CompartimentoBloqueado
}

// GetCompartimentoBloqueadoOk returns a tuple with the CompartimentoBloqueado field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompartimentoVM) GetCompartimentoBloqueadoOk() (*bool, bool) {
	if o == nil || o.CompartimentoBloqueado == nil {
		return nil, false
	}
	return o.CompartimentoBloqueado, true
}

// HasCompartimentoBloqueado returns a boolean if a field has been set.
func (o *CompartimentoVM) HasCompartimentoBloqueado() bool {
	if o != nil && o.CompartimentoBloqueado != nil {
		return true
	}

	return false
}

// SetCompartimentoBloqueado gets a reference to the given bool and assigns it to the CompartimentoBloqueado field.
func (o *CompartimentoVM) SetCompartimentoBloqueado(v bool) {
	o.CompartimentoBloqueado = &v
}

// GetVasilhame returns the Vasilhame field value if set, zero value otherwise.
func (o *CompartimentoVM) GetVasilhame() bool {
	if o == nil || o.Vasilhame == nil {
		var ret bool
		return ret
	}
	return *o.Vasilhame
}

// GetVasilhameOk returns a tuple with the Vasilhame field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompartimentoVM) GetVasilhameOk() (*bool, bool) {
	if o == nil || o.Vasilhame == nil {
		return nil, false
	}
	return o.Vasilhame, true
}

// HasVasilhame returns a boolean if a field has been set.
func (o *CompartimentoVM) HasVasilhame() bool {
	if o != nil && o.Vasilhame != nil {
		return true
	}

	return false
}

// SetVasilhame gets a reference to the given bool and assigns it to the Vasilhame field.
func (o *CompartimentoVM) SetVasilhame(v bool) {
	o.Vasilhame = &v
}

// GetTroca returns the Troca field value if set, zero value otherwise.
func (o *CompartimentoVM) GetTroca() bool {
	if o == nil || o.Troca == nil {
		var ret bool
		return ret
	}
	return *o.Troca
}

// GetTrocaOk returns a tuple with the Troca field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompartimentoVM) GetTrocaOk() (*bool, bool) {
	if o == nil || o.Troca == nil {
		return nil, false
	}
	return o.Troca, true
}

// HasTroca returns a boolean if a field has been set.
func (o *CompartimentoVM) HasTroca() bool {
	if o != nil && o.Troca != nil {
		return true
	}

	return false
}

// SetTroca gets a reference to the given bool and assigns it to the Troca field.
func (o *CompartimentoVM) SetTroca(v bool) {
	o.Troca = &v
}

func (o CompartimentoVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Numero.IsSet() {
		toSerialize["numero"] = o.Numero.Get()
	}
	if o.Tipo != nil {
		toSerialize["tipo"] = o.Tipo
	}
	if o.Ativo.IsSet() {
		toSerialize["ativo"] = o.Ativo.Get()
	}
	if o.RefGvm.IsSet() {
		toSerialize["refGvm"] = o.RefGvm.Get()
	}
	if o.RefProduto.IsSet() {
		toSerialize["refProduto"] = o.RefProduto.Get()
	}
	if o.LivreSemProduto != nil {
		toSerialize["livreSemProduto"] = o.LivreSemProduto
	}
	if o.CompartimentoBloqueado != nil {
		toSerialize["compartimentoBloqueado"] = o.CompartimentoBloqueado
	}
	if o.Vasilhame != nil {
		toSerialize["vasilhame"] = o.Vasilhame
	}
	if o.Troca != nil {
		toSerialize["troca"] = o.Troca
	}
	return json.Marshal(toSerialize)
}

type NullableCompartimentoVM struct {
	value *CompartimentoVM
	isSet bool
}

func (v NullableCompartimentoVM) Get() *CompartimentoVM {
	return v.value
}

func (v *NullableCompartimentoVM) Set(val *CompartimentoVM) {
	v.value = val
	v.isSet = true
}

func (v NullableCompartimentoVM) IsSet() bool {
	return v.isSet
}

func (v *NullableCompartimentoVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompartimentoVM(val *CompartimentoVM) *NullableCompartimentoVM {
	return &NullableCompartimentoVM{value: val, isSet: true}
}

func (v NullableCompartimentoVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompartimentoVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


