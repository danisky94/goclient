/*
 * Petrolifera API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Imagem struct for Imagem
type Imagem struct {
	Id *int64 `json:"id,omitempty"`
	Deleted *int32 `json:"deleted,omitempty"`
	Upd NullableTime `json:"upd,omitempty"`
	Usr NullableInt64 `json:"usr,omitempty"`
	Nome NullableString `json:"nome,omitempty"`
	Tamanho NullableInt64 `json:"tamanho,omitempty"`
	Tipo NullableString `json:"tipo,omitempty"`
	Conteudo NullableString `json:"conteudo,omitempty"`
}

// NewImagem instantiates a new Imagem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImagem() *Imagem {
	this := Imagem{}
	return &this
}

// NewImagemWithDefaults instantiates a new Imagem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImagemWithDefaults() *Imagem {
	this := Imagem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Imagem) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Imagem) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Imagem) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *Imagem) SetId(v int64) {
	o.Id = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *Imagem) GetDeleted() int32 {
	if o == nil || o.Deleted == nil {
		var ret int32
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Imagem) GetDeletedOk() (*int32, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *Imagem) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given int32 and assigns it to the Deleted field.
func (o *Imagem) SetDeleted(v int32) {
	o.Deleted = &v
}

// GetUpd returns the Upd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Imagem) GetUpd() time.Time {
	if o == nil || o.Upd.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Upd.Get()
}

// GetUpdOk returns a tuple with the Upd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Imagem) GetUpdOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Upd.Get(), o.Upd.IsSet()
}

// HasUpd returns a boolean if a field has been set.
func (o *Imagem) HasUpd() bool {
	if o != nil && o.Upd.IsSet() {
		return true
	}

	return false
}

// SetUpd gets a reference to the given NullableTime and assigns it to the Upd field.
func (o *Imagem) SetUpd(v time.Time) {
	o.Upd.Set(&v)
}
// SetUpdNil sets the value for Upd to be an explicit nil
func (o *Imagem) SetUpdNil() {
	o.Upd.Set(nil)
}

// UnsetUpd ensures that no value is present for Upd, not even an explicit nil
func (o *Imagem) UnsetUpd() {
	o.Upd.Unset()
}

// GetUsr returns the Usr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Imagem) GetUsr() int64 {
	if o == nil || o.Usr.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Usr.Get()
}

// GetUsrOk returns a tuple with the Usr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Imagem) GetUsrOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Usr.Get(), o.Usr.IsSet()
}

// HasUsr returns a boolean if a field has been set.
func (o *Imagem) HasUsr() bool {
	if o != nil && o.Usr.IsSet() {
		return true
	}

	return false
}

// SetUsr gets a reference to the given NullableInt64 and assigns it to the Usr field.
func (o *Imagem) SetUsr(v int64) {
	o.Usr.Set(&v)
}
// SetUsrNil sets the value for Usr to be an explicit nil
func (o *Imagem) SetUsrNil() {
	o.Usr.Set(nil)
}

// UnsetUsr ensures that no value is present for Usr, not even an explicit nil
func (o *Imagem) UnsetUsr() {
	o.Usr.Unset()
}

// GetNome returns the Nome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Imagem) GetNome() string {
	if o == nil || o.Nome.Get() == nil {
		var ret string
		return ret
	}
	return *o.Nome.Get()
}

// GetNomeOk returns a tuple with the Nome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Imagem) GetNomeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Nome.Get(), o.Nome.IsSet()
}

// HasNome returns a boolean if a field has been set.
func (o *Imagem) HasNome() bool {
	if o != nil && o.Nome.IsSet() {
		return true
	}

	return false
}

// SetNome gets a reference to the given NullableString and assigns it to the Nome field.
func (o *Imagem) SetNome(v string) {
	o.Nome.Set(&v)
}
// SetNomeNil sets the value for Nome to be an explicit nil
func (o *Imagem) SetNomeNil() {
	o.Nome.Set(nil)
}

// UnsetNome ensures that no value is present for Nome, not even an explicit nil
func (o *Imagem) UnsetNome() {
	o.Nome.Unset()
}

// GetTamanho returns the Tamanho field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Imagem) GetTamanho() int64 {
	if o == nil || o.Tamanho.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Tamanho.Get()
}

// GetTamanhoOk returns a tuple with the Tamanho field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Imagem) GetTamanhoOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Tamanho.Get(), o.Tamanho.IsSet()
}

// HasTamanho returns a boolean if a field has been set.
func (o *Imagem) HasTamanho() bool {
	if o != nil && o.Tamanho.IsSet() {
		return true
	}

	return false
}

// SetTamanho gets a reference to the given NullableInt64 and assigns it to the Tamanho field.
func (o *Imagem) SetTamanho(v int64) {
	o.Tamanho.Set(&v)
}
// SetTamanhoNil sets the value for Tamanho to be an explicit nil
func (o *Imagem) SetTamanhoNil() {
	o.Tamanho.Set(nil)
}

// UnsetTamanho ensures that no value is present for Tamanho, not even an explicit nil
func (o *Imagem) UnsetTamanho() {
	o.Tamanho.Unset()
}

// GetTipo returns the Tipo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Imagem) GetTipo() string {
	if o == nil || o.Tipo.Get() == nil {
		var ret string
		return ret
	}
	return *o.Tipo.Get()
}

// GetTipoOk returns a tuple with the Tipo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Imagem) GetTipoOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Tipo.Get(), o.Tipo.IsSet()
}

// HasTipo returns a boolean if a field has been set.
func (o *Imagem) HasTipo() bool {
	if o != nil && o.Tipo.IsSet() {
		return true
	}

	return false
}

// SetTipo gets a reference to the given NullableString and assigns it to the Tipo field.
func (o *Imagem) SetTipo(v string) {
	o.Tipo.Set(&v)
}
// SetTipoNil sets the value for Tipo to be an explicit nil
func (o *Imagem) SetTipoNil() {
	o.Tipo.Set(nil)
}

// UnsetTipo ensures that no value is present for Tipo, not even an explicit nil
func (o *Imagem) UnsetTipo() {
	o.Tipo.Unset()
}

// GetConteudo returns the Conteudo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Imagem) GetConteudo() string {
	if o == nil || o.Conteudo.Get() == nil {
		var ret string
		return ret
	}
	return *o.Conteudo.Get()
}

// GetConteudoOk returns a tuple with the Conteudo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Imagem) GetConteudoOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Conteudo.Get(), o.Conteudo.IsSet()
}

// HasConteudo returns a boolean if a field has been set.
func (o *Imagem) HasConteudo() bool {
	if o != nil && o.Conteudo.IsSet() {
		return true
	}

	return false
}

// SetConteudo gets a reference to the given NullableString and assigns it to the Conteudo field.
func (o *Imagem) SetConteudo(v string) {
	o.Conteudo.Set(&v)
}
// SetConteudoNil sets the value for Conteudo to be an explicit nil
func (o *Imagem) SetConteudoNil() {
	o.Conteudo.Set(nil)
}

// UnsetConteudo ensures that no value is present for Conteudo, not even an explicit nil
func (o *Imagem) UnsetConteudo() {
	o.Conteudo.Unset()
}

func (o Imagem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Upd.IsSet() {
		toSerialize["upd"] = o.Upd.Get()
	}
	if o.Usr.IsSet() {
		toSerialize["usr"] = o.Usr.Get()
	}
	if o.Nome.IsSet() {
		toSerialize["nome"] = o.Nome.Get()
	}
	if o.Tamanho.IsSet() {
		toSerialize["tamanho"] = o.Tamanho.Get()
	}
	if o.Tipo.IsSet() {
		toSerialize["tipo"] = o.Tipo.Get()
	}
	if o.Conteudo.IsSet() {
		toSerialize["conteudo"] = o.Conteudo.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableImagem struct {
	value *Imagem
	isSet bool
}

func (v NullableImagem) Get() *Imagem {
	return v.value
}

func (v *NullableImagem) Set(val *Imagem) {
	v.value = val
	v.isSet = true
}

func (v NullableImagem) IsSet() bool {
	return v.isSet
}

func (v *NullableImagem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImagem(val *Imagem) *NullableImagem {
	return &NullableImagem{value: val, isSet: true}
}

func (v NullableImagem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImagem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


