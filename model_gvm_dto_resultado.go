/*
 * Petrolifera API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GvmDTOResultado struct for GvmDTOResultado
type GvmDTOResultado struct {
	Ok *bool `json:"ok,omitempty"`
	Message NullableString `json:"message,omitempty"`
	Value *GvmDTO `json:"value,omitempty"`
}

// NewGvmDTOResultado instantiates a new GvmDTOResultado object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGvmDTOResultado() *GvmDTOResultado {
	this := GvmDTOResultado{}
	return &this
}

// NewGvmDTOResultadoWithDefaults instantiates a new GvmDTOResultado object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGvmDTOResultadoWithDefaults() *GvmDTOResultado {
	this := GvmDTOResultado{}
	return &this
}

// GetOk returns the Ok field value if set, zero value otherwise.
func (o *GvmDTOResultado) GetOk() bool {
	if o == nil || o.Ok == nil {
		var ret bool
		return ret
	}
	return *o.Ok
}

// GetOkOk returns a tuple with the Ok field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GvmDTOResultado) GetOkOk() (*bool, bool) {
	if o == nil || o.Ok == nil {
		return nil, false
	}
	return o.Ok, true
}

// HasOk returns a boolean if a field has been set.
func (o *GvmDTOResultado) HasOk() bool {
	if o != nil && o.Ok != nil {
		return true
	}

	return false
}

// SetOk gets a reference to the given bool and assigns it to the Ok field.
func (o *GvmDTOResultado) SetOk(v bool) {
	o.Ok = &v
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GvmDTOResultado) GetMessage() string {
	if o == nil || o.Message.Get() == nil {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GvmDTOResultado) GetMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *GvmDTOResultado) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *GvmDTOResultado) SetMessage(v string) {
	o.Message.Set(&v)
}
// SetMessageNil sets the value for Message to be an explicit nil
func (o *GvmDTOResultado) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *GvmDTOResultado) UnsetMessage() {
	o.Message.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *GvmDTOResultado) GetValue() GvmDTO {
	if o == nil || o.Value == nil {
		var ret GvmDTO
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GvmDTOResultado) GetValueOk() (*GvmDTO, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *GvmDTOResultado) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given GvmDTO and assigns it to the Value field.
func (o *GvmDTOResultado) SetValue(v GvmDTO) {
	o.Value = &v
}

func (o GvmDTOResultado) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ok != nil {
		toSerialize["ok"] = o.Ok
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableGvmDTOResultado struct {
	value *GvmDTOResultado
	isSet bool
}

func (v NullableGvmDTOResultado) Get() *GvmDTOResultado {
	return v.value
}

func (v *NullableGvmDTOResultado) Set(val *GvmDTOResultado) {
	v.value = val
	v.isSet = true
}

func (v NullableGvmDTOResultado) IsSet() bool {
	return v.isSet
}

func (v *NullableGvmDTOResultado) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGvmDTOResultado(val *GvmDTOResultado) *NullableGvmDTOResultado {
	return &NullableGvmDTOResultado{value: val, isSet: true}
}

func (v NullableGvmDTOResultado) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGvmDTOResultado) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


