/*
 * Petrolifera API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GvmDTO struct for GvmDTO
type GvmDTO struct {
	Id *int64 `json:"id,omitempty"`
	Compartimentos []CompartimentoDTO `json:"compartimentos,omitempty"`
}

// NewGvmDTO instantiates a new GvmDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGvmDTO() *GvmDTO {
	this := GvmDTO{}
	return &this
}

// NewGvmDTOWithDefaults instantiates a new GvmDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGvmDTOWithDefaults() *GvmDTO {
	this := GvmDTO{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GvmDTO) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GvmDTO) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GvmDTO) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GvmDTO) SetId(v int64) {
	o.Id = &v
}

// GetCompartimentos returns the Compartimentos field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GvmDTO) GetCompartimentos() []CompartimentoDTO {
	if o == nil  {
		var ret []CompartimentoDTO
		return ret
	}
	return o.Compartimentos
}

// GetCompartimentosOk returns a tuple with the Compartimentos field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GvmDTO) GetCompartimentosOk() (*[]CompartimentoDTO, bool) {
	if o == nil || o.Compartimentos == nil {
		return nil, false
	}
	return &o.Compartimentos, true
}

// HasCompartimentos returns a boolean if a field has been set.
func (o *GvmDTO) HasCompartimentos() bool {
	if o != nil && o.Compartimentos != nil {
		return true
	}

	return false
}

// SetCompartimentos gets a reference to the given []CompartimentoDTO and assigns it to the Compartimentos field.
func (o *GvmDTO) SetCompartimentos(v []CompartimentoDTO) {
	o.Compartimentos = v
}

func (o GvmDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Compartimentos != nil {
		toSerialize["compartimentos"] = o.Compartimentos
	}
	return json.Marshal(toSerialize)
}

type NullableGvmDTO struct {
	value *GvmDTO
	isSet bool
}

func (v NullableGvmDTO) Get() *GvmDTO {
	return v.value
}

func (v *NullableGvmDTO) Set(val *GvmDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGvmDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGvmDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGvmDTO(val *GvmDTO) *NullableGvmDTO {
	return &NullableGvmDTO{value: val, isSet: true}
}

func (v NullableGvmDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGvmDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


