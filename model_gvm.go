/*
 * Petrolifera API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Gvm struct for Gvm
type Gvm struct {
	Id *int64 `json:"id,omitempty"`
	Deleted *int32 `json:"deleted,omitempty"`
	Upd NullableTime `json:"upd,omitempty"`
	Usr NullableInt64 `json:"usr,omitempty"`
	Nome NullableString `json:"nome,omitempty"`
	Modelo NullableString `json:"modelo,omitempty"`
	NumeroSerie NullableString `json:"numeroSerie,omitempty"`
	Tipo *TipoGvm `json:"tipo,omitempty"`
	Estado *EstadoGvm `json:"estado,omitempty"`
	DataProducao NullableTime `json:"dataProducao,omitempty"`
	VersaoFirmware NullableString `json:"versaoFirmware,omitempty"`
	VersaoSoftware NullableString `json:"versaoSoftware,omitempty"`
	UltimaComunicacao NullableTime `json:"ultimaComunicacao,omitempty"`
	RefLocal NullableInt64 `json:"refLocal,omitempty"`
	RefEntidade NullableInt64 `json:"refEntidade,omitempty"`
	RefNo NullableInt64 `json:"refNo,omitempty"`
	Latitude NullableString `json:"latitude,omitempty"`
	Longitude NullableString `json:"longitude,omitempty"`
	TipoRede *TipoRede `json:"tipoRede,omitempty"`
	IntensidadeSinal NullableFloat64 `json:"intensidadeSinal,omitempty"`
	Imie NullableString `json:"imie,omitempty"`
	Imsi NullableString `json:"imsi,omitempty"`
	Iccid NullableString `json:"iccid,omitempty"`
	RaspberryPi *RaspberryPi `json:"raspberryPi,omitempty"`
	Local *Local `json:"local,omitempty"`
	Compartimentos []Compartimento `json:"compartimentos,omitempty"`
	Vendas []Venda `json:"vendas,omitempty"`
	OrdensServico []OrdemServico `json:"ordensServico,omitempty"`
	Eventos []Evento `json:"eventos,omitempty"`
}

// NewGvm instantiates a new Gvm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGvm() *Gvm {
	this := Gvm{}
	return &this
}

// NewGvmWithDefaults instantiates a new Gvm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGvmWithDefaults() *Gvm {
	this := Gvm{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Gvm) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gvm) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Gvm) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *Gvm) SetId(v int64) {
	o.Id = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *Gvm) GetDeleted() int32 {
	if o == nil || o.Deleted == nil {
		var ret int32
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gvm) GetDeletedOk() (*int32, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *Gvm) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given int32 and assigns it to the Deleted field.
func (o *Gvm) SetDeleted(v int32) {
	o.Deleted = &v
}

// GetUpd returns the Upd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetUpd() time.Time {
	if o == nil || o.Upd.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Upd.Get()
}

// GetUpdOk returns a tuple with the Upd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetUpdOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Upd.Get(), o.Upd.IsSet()
}

// HasUpd returns a boolean if a field has been set.
func (o *Gvm) HasUpd() bool {
	if o != nil && o.Upd.IsSet() {
		return true
	}

	return false
}

// SetUpd gets a reference to the given NullableTime and assigns it to the Upd field.
func (o *Gvm) SetUpd(v time.Time) {
	o.Upd.Set(&v)
}
// SetUpdNil sets the value for Upd to be an explicit nil
func (o *Gvm) SetUpdNil() {
	o.Upd.Set(nil)
}

// UnsetUpd ensures that no value is present for Upd, not even an explicit nil
func (o *Gvm) UnsetUpd() {
	o.Upd.Unset()
}

// GetUsr returns the Usr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetUsr() int64 {
	if o == nil || o.Usr.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Usr.Get()
}

// GetUsrOk returns a tuple with the Usr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetUsrOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Usr.Get(), o.Usr.IsSet()
}

// HasUsr returns a boolean if a field has been set.
func (o *Gvm) HasUsr() bool {
	if o != nil && o.Usr.IsSet() {
		return true
	}

	return false
}

// SetUsr gets a reference to the given NullableInt64 and assigns it to the Usr field.
func (o *Gvm) SetUsr(v int64) {
	o.Usr.Set(&v)
}
// SetUsrNil sets the value for Usr to be an explicit nil
func (o *Gvm) SetUsrNil() {
	o.Usr.Set(nil)
}

// UnsetUsr ensures that no value is present for Usr, not even an explicit nil
func (o *Gvm) UnsetUsr() {
	o.Usr.Unset()
}

// GetNome returns the Nome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetNome() string {
	if o == nil || o.Nome.Get() == nil {
		var ret string
		return ret
	}
	return *o.Nome.Get()
}

// GetNomeOk returns a tuple with the Nome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetNomeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Nome.Get(), o.Nome.IsSet()
}

// HasNome returns a boolean if a field has been set.
func (o *Gvm) HasNome() bool {
	if o != nil && o.Nome.IsSet() {
		return true
	}

	return false
}

// SetNome gets a reference to the given NullableString and assigns it to the Nome field.
func (o *Gvm) SetNome(v string) {
	o.Nome.Set(&v)
}
// SetNomeNil sets the value for Nome to be an explicit nil
func (o *Gvm) SetNomeNil() {
	o.Nome.Set(nil)
}

// UnsetNome ensures that no value is present for Nome, not even an explicit nil
func (o *Gvm) UnsetNome() {
	o.Nome.Unset()
}

// GetModelo returns the Modelo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetModelo() string {
	if o == nil || o.Modelo.Get() == nil {
		var ret string
		return ret
	}
	return *o.Modelo.Get()
}

// GetModeloOk returns a tuple with the Modelo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetModeloOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Modelo.Get(), o.Modelo.IsSet()
}

// HasModelo returns a boolean if a field has been set.
func (o *Gvm) HasModelo() bool {
	if o != nil && o.Modelo.IsSet() {
		return true
	}

	return false
}

// SetModelo gets a reference to the given NullableString and assigns it to the Modelo field.
func (o *Gvm) SetModelo(v string) {
	o.Modelo.Set(&v)
}
// SetModeloNil sets the value for Modelo to be an explicit nil
func (o *Gvm) SetModeloNil() {
	o.Modelo.Set(nil)
}

// UnsetModelo ensures that no value is present for Modelo, not even an explicit nil
func (o *Gvm) UnsetModelo() {
	o.Modelo.Unset()
}

// GetNumeroSerie returns the NumeroSerie field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetNumeroSerie() string {
	if o == nil || o.NumeroSerie.Get() == nil {
		var ret string
		return ret
	}
	return *o.NumeroSerie.Get()
}

// GetNumeroSerieOk returns a tuple with the NumeroSerie field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetNumeroSerieOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NumeroSerie.Get(), o.NumeroSerie.IsSet()
}

// HasNumeroSerie returns a boolean if a field has been set.
func (o *Gvm) HasNumeroSerie() bool {
	if o != nil && o.NumeroSerie.IsSet() {
		return true
	}

	return false
}

// SetNumeroSerie gets a reference to the given NullableString and assigns it to the NumeroSerie field.
func (o *Gvm) SetNumeroSerie(v string) {
	o.NumeroSerie.Set(&v)
}
// SetNumeroSerieNil sets the value for NumeroSerie to be an explicit nil
func (o *Gvm) SetNumeroSerieNil() {
	o.NumeroSerie.Set(nil)
}

// UnsetNumeroSerie ensures that no value is present for NumeroSerie, not even an explicit nil
func (o *Gvm) UnsetNumeroSerie() {
	o.NumeroSerie.Unset()
}

// GetTipo returns the Tipo field value if set, zero value otherwise.
func (o *Gvm) GetTipo() TipoGvm {
	if o == nil || o.Tipo == nil {
		var ret TipoGvm
		return ret
	}
	return *o.Tipo
}

// GetTipoOk returns a tuple with the Tipo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gvm) GetTipoOk() (*TipoGvm, bool) {
	if o == nil || o.Tipo == nil {
		return nil, false
	}
	return o.Tipo, true
}

// HasTipo returns a boolean if a field has been set.
func (o *Gvm) HasTipo() bool {
	if o != nil && o.Tipo != nil {
		return true
	}

	return false
}

// SetTipo gets a reference to the given TipoGvm and assigns it to the Tipo field.
func (o *Gvm) SetTipo(v TipoGvm) {
	o.Tipo = &v
}

// GetEstado returns the Estado field value if set, zero value otherwise.
func (o *Gvm) GetEstado() EstadoGvm {
	if o == nil || o.Estado == nil {
		var ret EstadoGvm
		return ret
	}
	return *o.Estado
}

// GetEstadoOk returns a tuple with the Estado field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gvm) GetEstadoOk() (*EstadoGvm, bool) {
	if o == nil || o.Estado == nil {
		return nil, false
	}
	return o.Estado, true
}

// HasEstado returns a boolean if a field has been set.
func (o *Gvm) HasEstado() bool {
	if o != nil && o.Estado != nil {
		return true
	}

	return false
}

// SetEstado gets a reference to the given EstadoGvm and assigns it to the Estado field.
func (o *Gvm) SetEstado(v EstadoGvm) {
	o.Estado = &v
}

// GetDataProducao returns the DataProducao field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetDataProducao() time.Time {
	if o == nil || o.DataProducao.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DataProducao.Get()
}

// GetDataProducaoOk returns a tuple with the DataProducao field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetDataProducaoOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DataProducao.Get(), o.DataProducao.IsSet()
}

// HasDataProducao returns a boolean if a field has been set.
func (o *Gvm) HasDataProducao() bool {
	if o != nil && o.DataProducao.IsSet() {
		return true
	}

	return false
}

// SetDataProducao gets a reference to the given NullableTime and assigns it to the DataProducao field.
func (o *Gvm) SetDataProducao(v time.Time) {
	o.DataProducao.Set(&v)
}
// SetDataProducaoNil sets the value for DataProducao to be an explicit nil
func (o *Gvm) SetDataProducaoNil() {
	o.DataProducao.Set(nil)
}

// UnsetDataProducao ensures that no value is present for DataProducao, not even an explicit nil
func (o *Gvm) UnsetDataProducao() {
	o.DataProducao.Unset()
}

// GetVersaoFirmware returns the VersaoFirmware field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetVersaoFirmware() string {
	if o == nil || o.VersaoFirmware.Get() == nil {
		var ret string
		return ret
	}
	return *o.VersaoFirmware.Get()
}

// GetVersaoFirmwareOk returns a tuple with the VersaoFirmware field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetVersaoFirmwareOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VersaoFirmware.Get(), o.VersaoFirmware.IsSet()
}

// HasVersaoFirmware returns a boolean if a field has been set.
func (o *Gvm) HasVersaoFirmware() bool {
	if o != nil && o.VersaoFirmware.IsSet() {
		return true
	}

	return false
}

// SetVersaoFirmware gets a reference to the given NullableString and assigns it to the VersaoFirmware field.
func (o *Gvm) SetVersaoFirmware(v string) {
	o.VersaoFirmware.Set(&v)
}
// SetVersaoFirmwareNil sets the value for VersaoFirmware to be an explicit nil
func (o *Gvm) SetVersaoFirmwareNil() {
	o.VersaoFirmware.Set(nil)
}

// UnsetVersaoFirmware ensures that no value is present for VersaoFirmware, not even an explicit nil
func (o *Gvm) UnsetVersaoFirmware() {
	o.VersaoFirmware.Unset()
}

// GetVersaoSoftware returns the VersaoSoftware field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetVersaoSoftware() string {
	if o == nil || o.VersaoSoftware.Get() == nil {
		var ret string
		return ret
	}
	return *o.VersaoSoftware.Get()
}

// GetVersaoSoftwareOk returns a tuple with the VersaoSoftware field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetVersaoSoftwareOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VersaoSoftware.Get(), o.VersaoSoftware.IsSet()
}

// HasVersaoSoftware returns a boolean if a field has been set.
func (o *Gvm) HasVersaoSoftware() bool {
	if o != nil && o.VersaoSoftware.IsSet() {
		return true
	}

	return false
}

// SetVersaoSoftware gets a reference to the given NullableString and assigns it to the VersaoSoftware field.
func (o *Gvm) SetVersaoSoftware(v string) {
	o.VersaoSoftware.Set(&v)
}
// SetVersaoSoftwareNil sets the value for VersaoSoftware to be an explicit nil
func (o *Gvm) SetVersaoSoftwareNil() {
	o.VersaoSoftware.Set(nil)
}

// UnsetVersaoSoftware ensures that no value is present for VersaoSoftware, not even an explicit nil
func (o *Gvm) UnsetVersaoSoftware() {
	o.VersaoSoftware.Unset()
}

// GetUltimaComunicacao returns the UltimaComunicacao field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetUltimaComunicacao() time.Time {
	if o == nil || o.UltimaComunicacao.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.UltimaComunicacao.Get()
}

// GetUltimaComunicacaoOk returns a tuple with the UltimaComunicacao field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetUltimaComunicacaoOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UltimaComunicacao.Get(), o.UltimaComunicacao.IsSet()
}

// HasUltimaComunicacao returns a boolean if a field has been set.
func (o *Gvm) HasUltimaComunicacao() bool {
	if o != nil && o.UltimaComunicacao.IsSet() {
		return true
	}

	return false
}

// SetUltimaComunicacao gets a reference to the given NullableTime and assigns it to the UltimaComunicacao field.
func (o *Gvm) SetUltimaComunicacao(v time.Time) {
	o.UltimaComunicacao.Set(&v)
}
// SetUltimaComunicacaoNil sets the value for UltimaComunicacao to be an explicit nil
func (o *Gvm) SetUltimaComunicacaoNil() {
	o.UltimaComunicacao.Set(nil)
}

// UnsetUltimaComunicacao ensures that no value is present for UltimaComunicacao, not even an explicit nil
func (o *Gvm) UnsetUltimaComunicacao() {
	o.UltimaComunicacao.Unset()
}

// GetRefLocal returns the RefLocal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetRefLocal() int64 {
	if o == nil || o.RefLocal.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefLocal.Get()
}

// GetRefLocalOk returns a tuple with the RefLocal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetRefLocalOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefLocal.Get(), o.RefLocal.IsSet()
}

// HasRefLocal returns a boolean if a field has been set.
func (o *Gvm) HasRefLocal() bool {
	if o != nil && o.RefLocal.IsSet() {
		return true
	}

	return false
}

// SetRefLocal gets a reference to the given NullableInt64 and assigns it to the RefLocal field.
func (o *Gvm) SetRefLocal(v int64) {
	o.RefLocal.Set(&v)
}
// SetRefLocalNil sets the value for RefLocal to be an explicit nil
func (o *Gvm) SetRefLocalNil() {
	o.RefLocal.Set(nil)
}

// UnsetRefLocal ensures that no value is present for RefLocal, not even an explicit nil
func (o *Gvm) UnsetRefLocal() {
	o.RefLocal.Unset()
}

// GetRefEntidade returns the RefEntidade field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetRefEntidade() int64 {
	if o == nil || o.RefEntidade.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefEntidade.Get()
}

// GetRefEntidadeOk returns a tuple with the RefEntidade field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetRefEntidadeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefEntidade.Get(), o.RefEntidade.IsSet()
}

// HasRefEntidade returns a boolean if a field has been set.
func (o *Gvm) HasRefEntidade() bool {
	if o != nil && o.RefEntidade.IsSet() {
		return true
	}

	return false
}

// SetRefEntidade gets a reference to the given NullableInt64 and assigns it to the RefEntidade field.
func (o *Gvm) SetRefEntidade(v int64) {
	o.RefEntidade.Set(&v)
}
// SetRefEntidadeNil sets the value for RefEntidade to be an explicit nil
func (o *Gvm) SetRefEntidadeNil() {
	o.RefEntidade.Set(nil)
}

// UnsetRefEntidade ensures that no value is present for RefEntidade, not even an explicit nil
func (o *Gvm) UnsetRefEntidade() {
	o.RefEntidade.Unset()
}

// GetRefNo returns the RefNo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetRefNo() int64 {
	if o == nil || o.RefNo.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefNo.Get()
}

// GetRefNoOk returns a tuple with the RefNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetRefNoOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefNo.Get(), o.RefNo.IsSet()
}

// HasRefNo returns a boolean if a field has been set.
func (o *Gvm) HasRefNo() bool {
	if o != nil && o.RefNo.IsSet() {
		return true
	}

	return false
}

// SetRefNo gets a reference to the given NullableInt64 and assigns it to the RefNo field.
func (o *Gvm) SetRefNo(v int64) {
	o.RefNo.Set(&v)
}
// SetRefNoNil sets the value for RefNo to be an explicit nil
func (o *Gvm) SetRefNoNil() {
	o.RefNo.Set(nil)
}

// UnsetRefNo ensures that no value is present for RefNo, not even an explicit nil
func (o *Gvm) UnsetRefNo() {
	o.RefNo.Unset()
}

// GetLatitude returns the Latitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetLatitude() string {
	if o == nil || o.Latitude.Get() == nil {
		var ret string
		return ret
	}
	return *o.Latitude.Get()
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetLatitudeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Latitude.Get(), o.Latitude.IsSet()
}

// HasLatitude returns a boolean if a field has been set.
func (o *Gvm) HasLatitude() bool {
	if o != nil && o.Latitude.IsSet() {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given NullableString and assigns it to the Latitude field.
func (o *Gvm) SetLatitude(v string) {
	o.Latitude.Set(&v)
}
// SetLatitudeNil sets the value for Latitude to be an explicit nil
func (o *Gvm) SetLatitudeNil() {
	o.Latitude.Set(nil)
}

// UnsetLatitude ensures that no value is present for Latitude, not even an explicit nil
func (o *Gvm) UnsetLatitude() {
	o.Latitude.Unset()
}

// GetLongitude returns the Longitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetLongitude() string {
	if o == nil || o.Longitude.Get() == nil {
		var ret string
		return ret
	}
	return *o.Longitude.Get()
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetLongitudeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Longitude.Get(), o.Longitude.IsSet()
}

// HasLongitude returns a boolean if a field has been set.
func (o *Gvm) HasLongitude() bool {
	if o != nil && o.Longitude.IsSet() {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given NullableString and assigns it to the Longitude field.
func (o *Gvm) SetLongitude(v string) {
	o.Longitude.Set(&v)
}
// SetLongitudeNil sets the value for Longitude to be an explicit nil
func (o *Gvm) SetLongitudeNil() {
	o.Longitude.Set(nil)
}

// UnsetLongitude ensures that no value is present for Longitude, not even an explicit nil
func (o *Gvm) UnsetLongitude() {
	o.Longitude.Unset()
}

// GetTipoRede returns the TipoRede field value if set, zero value otherwise.
func (o *Gvm) GetTipoRede() TipoRede {
	if o == nil || o.TipoRede == nil {
		var ret TipoRede
		return ret
	}
	return *o.TipoRede
}

// GetTipoRedeOk returns a tuple with the TipoRede field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gvm) GetTipoRedeOk() (*TipoRede, bool) {
	if o == nil || o.TipoRede == nil {
		return nil, false
	}
	return o.TipoRede, true
}

// HasTipoRede returns a boolean if a field has been set.
func (o *Gvm) HasTipoRede() bool {
	if o != nil && o.TipoRede != nil {
		return true
	}

	return false
}

// SetTipoRede gets a reference to the given TipoRede and assigns it to the TipoRede field.
func (o *Gvm) SetTipoRede(v TipoRede) {
	o.TipoRede = &v
}

// GetIntensidadeSinal returns the IntensidadeSinal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetIntensidadeSinal() float64 {
	if o == nil || o.IntensidadeSinal.Get() == nil {
		var ret float64
		return ret
	}
	return *o.IntensidadeSinal.Get()
}

// GetIntensidadeSinalOk returns a tuple with the IntensidadeSinal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetIntensidadeSinalOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IntensidadeSinal.Get(), o.IntensidadeSinal.IsSet()
}

// HasIntensidadeSinal returns a boolean if a field has been set.
func (o *Gvm) HasIntensidadeSinal() bool {
	if o != nil && o.IntensidadeSinal.IsSet() {
		return true
	}

	return false
}

// SetIntensidadeSinal gets a reference to the given NullableFloat64 and assigns it to the IntensidadeSinal field.
func (o *Gvm) SetIntensidadeSinal(v float64) {
	o.IntensidadeSinal.Set(&v)
}
// SetIntensidadeSinalNil sets the value for IntensidadeSinal to be an explicit nil
func (o *Gvm) SetIntensidadeSinalNil() {
	o.IntensidadeSinal.Set(nil)
}

// UnsetIntensidadeSinal ensures that no value is present for IntensidadeSinal, not even an explicit nil
func (o *Gvm) UnsetIntensidadeSinal() {
	o.IntensidadeSinal.Unset()
}

// GetImie returns the Imie field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetImie() string {
	if o == nil || o.Imie.Get() == nil {
		var ret string
		return ret
	}
	return *o.Imie.Get()
}

// GetImieOk returns a tuple with the Imie field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetImieOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Imie.Get(), o.Imie.IsSet()
}

// HasImie returns a boolean if a field has been set.
func (o *Gvm) HasImie() bool {
	if o != nil && o.Imie.IsSet() {
		return true
	}

	return false
}

// SetImie gets a reference to the given NullableString and assigns it to the Imie field.
func (o *Gvm) SetImie(v string) {
	o.Imie.Set(&v)
}
// SetImieNil sets the value for Imie to be an explicit nil
func (o *Gvm) SetImieNil() {
	o.Imie.Set(nil)
}

// UnsetImie ensures that no value is present for Imie, not even an explicit nil
func (o *Gvm) UnsetImie() {
	o.Imie.Unset()
}

// GetImsi returns the Imsi field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetImsi() string {
	if o == nil || o.Imsi.Get() == nil {
		var ret string
		return ret
	}
	return *o.Imsi.Get()
}

// GetImsiOk returns a tuple with the Imsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetImsiOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Imsi.Get(), o.Imsi.IsSet()
}

// HasImsi returns a boolean if a field has been set.
func (o *Gvm) HasImsi() bool {
	if o != nil && o.Imsi.IsSet() {
		return true
	}

	return false
}

// SetImsi gets a reference to the given NullableString and assigns it to the Imsi field.
func (o *Gvm) SetImsi(v string) {
	o.Imsi.Set(&v)
}
// SetImsiNil sets the value for Imsi to be an explicit nil
func (o *Gvm) SetImsiNil() {
	o.Imsi.Set(nil)
}

// UnsetImsi ensures that no value is present for Imsi, not even an explicit nil
func (o *Gvm) UnsetImsi() {
	o.Imsi.Unset()
}

// GetIccid returns the Iccid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetIccid() string {
	if o == nil || o.Iccid.Get() == nil {
		var ret string
		return ret
	}
	return *o.Iccid.Get()
}

// GetIccidOk returns a tuple with the Iccid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetIccidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Iccid.Get(), o.Iccid.IsSet()
}

// HasIccid returns a boolean if a field has been set.
func (o *Gvm) HasIccid() bool {
	if o != nil && o.Iccid.IsSet() {
		return true
	}

	return false
}

// SetIccid gets a reference to the given NullableString and assigns it to the Iccid field.
func (o *Gvm) SetIccid(v string) {
	o.Iccid.Set(&v)
}
// SetIccidNil sets the value for Iccid to be an explicit nil
func (o *Gvm) SetIccidNil() {
	o.Iccid.Set(nil)
}

// UnsetIccid ensures that no value is present for Iccid, not even an explicit nil
func (o *Gvm) UnsetIccid() {
	o.Iccid.Unset()
}

// GetRaspberryPi returns the RaspberryPi field value if set, zero value otherwise.
func (o *Gvm) GetRaspberryPi() RaspberryPi {
	if o == nil || o.RaspberryPi == nil {
		var ret RaspberryPi
		return ret
	}
	return *o.RaspberryPi
}

// GetRaspberryPiOk returns a tuple with the RaspberryPi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gvm) GetRaspberryPiOk() (*RaspberryPi, bool) {
	if o == nil || o.RaspberryPi == nil {
		return nil, false
	}
	return o.RaspberryPi, true
}

// HasRaspberryPi returns a boolean if a field has been set.
func (o *Gvm) HasRaspberryPi() bool {
	if o != nil && o.RaspberryPi != nil {
		return true
	}

	return false
}

// SetRaspberryPi gets a reference to the given RaspberryPi and assigns it to the RaspberryPi field.
func (o *Gvm) SetRaspberryPi(v RaspberryPi) {
	o.RaspberryPi = &v
}

// GetLocal returns the Local field value if set, zero value otherwise.
func (o *Gvm) GetLocal() Local {
	if o == nil || o.Local == nil {
		var ret Local
		return ret
	}
	return *o.Local
}

// GetLocalOk returns a tuple with the Local field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gvm) GetLocalOk() (*Local, bool) {
	if o == nil || o.Local == nil {
		return nil, false
	}
	return o.Local, true
}

// HasLocal returns a boolean if a field has been set.
func (o *Gvm) HasLocal() bool {
	if o != nil && o.Local != nil {
		return true
	}

	return false
}

// SetLocal gets a reference to the given Local and assigns it to the Local field.
func (o *Gvm) SetLocal(v Local) {
	o.Local = &v
}

// GetCompartimentos returns the Compartimentos field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetCompartimentos() []Compartimento {
	if o == nil  {
		var ret []Compartimento
		return ret
	}
	return o.Compartimentos
}

// GetCompartimentosOk returns a tuple with the Compartimentos field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetCompartimentosOk() (*[]Compartimento, bool) {
	if o == nil || o.Compartimentos == nil {
		return nil, false
	}
	return &o.Compartimentos, true
}

// HasCompartimentos returns a boolean if a field has been set.
func (o *Gvm) HasCompartimentos() bool {
	if o != nil && o.Compartimentos != nil {
		return true
	}

	return false
}

// SetCompartimentos gets a reference to the given []Compartimento and assigns it to the Compartimentos field.
func (o *Gvm) SetCompartimentos(v []Compartimento) {
	o.Compartimentos = v
}

// GetVendas returns the Vendas field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetVendas() []Venda {
	if o == nil  {
		var ret []Venda
		return ret
	}
	return o.Vendas
}

// GetVendasOk returns a tuple with the Vendas field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetVendasOk() (*[]Venda, bool) {
	if o == nil || o.Vendas == nil {
		return nil, false
	}
	return &o.Vendas, true
}

// HasVendas returns a boolean if a field has been set.
func (o *Gvm) HasVendas() bool {
	if o != nil && o.Vendas != nil {
		return true
	}

	return false
}

// SetVendas gets a reference to the given []Venda and assigns it to the Vendas field.
func (o *Gvm) SetVendas(v []Venda) {
	o.Vendas = v
}

// GetOrdensServico returns the OrdensServico field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetOrdensServico() []OrdemServico {
	if o == nil  {
		var ret []OrdemServico
		return ret
	}
	return o.OrdensServico
}

// GetOrdensServicoOk returns a tuple with the OrdensServico field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetOrdensServicoOk() (*[]OrdemServico, bool) {
	if o == nil || o.OrdensServico == nil {
		return nil, false
	}
	return &o.OrdensServico, true
}

// HasOrdensServico returns a boolean if a field has been set.
func (o *Gvm) HasOrdensServico() bool {
	if o != nil && o.OrdensServico != nil {
		return true
	}

	return false
}

// SetOrdensServico gets a reference to the given []OrdemServico and assigns it to the OrdensServico field.
func (o *Gvm) SetOrdensServico(v []OrdemServico) {
	o.OrdensServico = v
}

// GetEventos returns the Eventos field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gvm) GetEventos() []Evento {
	if o == nil  {
		var ret []Evento
		return ret
	}
	return o.Eventos
}

// GetEventosOk returns a tuple with the Eventos field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gvm) GetEventosOk() (*[]Evento, bool) {
	if o == nil || o.Eventos == nil {
		return nil, false
	}
	return &o.Eventos, true
}

// HasEventos returns a boolean if a field has been set.
func (o *Gvm) HasEventos() bool {
	if o != nil && o.Eventos != nil {
		return true
	}

	return false
}

// SetEventos gets a reference to the given []Evento and assigns it to the Eventos field.
func (o *Gvm) SetEventos(v []Evento) {
	o.Eventos = v
}

func (o Gvm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Upd.IsSet() {
		toSerialize["upd"] = o.Upd.Get()
	}
	if o.Usr.IsSet() {
		toSerialize["usr"] = o.Usr.Get()
	}
	if o.Nome.IsSet() {
		toSerialize["nome"] = o.Nome.Get()
	}
	if o.Modelo.IsSet() {
		toSerialize["modelo"] = o.Modelo.Get()
	}
	if o.NumeroSerie.IsSet() {
		toSerialize["numeroSerie"] = o.NumeroSerie.Get()
	}
	if o.Tipo != nil {
		toSerialize["tipo"] = o.Tipo
	}
	if o.Estado != nil {
		toSerialize["estado"] = o.Estado
	}
	if o.DataProducao.IsSet() {
		toSerialize["dataProducao"] = o.DataProducao.Get()
	}
	if o.VersaoFirmware.IsSet() {
		toSerialize["versaoFirmware"] = o.VersaoFirmware.Get()
	}
	if o.VersaoSoftware.IsSet() {
		toSerialize["versaoSoftware"] = o.VersaoSoftware.Get()
	}
	if o.UltimaComunicacao.IsSet() {
		toSerialize["ultimaComunicacao"] = o.UltimaComunicacao.Get()
	}
	if o.RefLocal.IsSet() {
		toSerialize["refLocal"] = o.RefLocal.Get()
	}
	if o.RefEntidade.IsSet() {
		toSerialize["refEntidade"] = o.RefEntidade.Get()
	}
	if o.RefNo.IsSet() {
		toSerialize["refNo"] = o.RefNo.Get()
	}
	if o.Latitude.IsSet() {
		toSerialize["latitude"] = o.Latitude.Get()
	}
	if o.Longitude.IsSet() {
		toSerialize["longitude"] = o.Longitude.Get()
	}
	if o.TipoRede != nil {
		toSerialize["tipoRede"] = o.TipoRede
	}
	if o.IntensidadeSinal.IsSet() {
		toSerialize["intensidadeSinal"] = o.IntensidadeSinal.Get()
	}
	if o.Imie.IsSet() {
		toSerialize["imie"] = o.Imie.Get()
	}
	if o.Imsi.IsSet() {
		toSerialize["imsi"] = o.Imsi.Get()
	}
	if o.Iccid.IsSet() {
		toSerialize["iccid"] = o.Iccid.Get()
	}
	if o.RaspberryPi != nil {
		toSerialize["raspberryPi"] = o.RaspberryPi
	}
	if o.Local != nil {
		toSerialize["local"] = o.Local
	}
	if o.Compartimentos != nil {
		toSerialize["compartimentos"] = o.Compartimentos
	}
	if o.Vendas != nil {
		toSerialize["vendas"] = o.Vendas
	}
	if o.OrdensServico != nil {
		toSerialize["ordensServico"] = o.OrdensServico
	}
	if o.Eventos != nil {
		toSerialize["eventos"] = o.Eventos
	}
	return json.Marshal(toSerialize)
}

type NullableGvm struct {
	value *Gvm
	isSet bool
}

func (v NullableGvm) Get() *Gvm {
	return v.value
}

func (v *NullableGvm) Set(val *Gvm) {
	v.value = val
	v.isSet = true
}

func (v NullableGvm) IsSet() bool {
	return v.isSet
}

func (v *NullableGvm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGvm(val *Gvm) *NullableGvm {
	return &NullableGvm{value: val, isSet: true}
}

func (v NullableGvm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGvm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


