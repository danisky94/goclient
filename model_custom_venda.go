/*
 * Petrolifera API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CustomVenda struct for CustomVenda
type CustomVenda struct {
	Produto *ProdutoVM `json:"produto,omitempty"`
	Gvm *GvmVM `json:"gvm,omitempty"`
	Vasilhame NullableBool `json:"vasilhame,omitempty"`
	RefCompartimentoProduto NullableInt64 `json:"refCompartimentoProduto,omitempty"`
	RefCompartimentoVasilhame NullableInt64 `json:"refCompartimentoVasilhame,omitempty"`
}

// NewCustomVenda instantiates a new CustomVenda object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomVenda() *CustomVenda {
	this := CustomVenda{}
	return &this
}

// NewCustomVendaWithDefaults instantiates a new CustomVenda object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomVendaWithDefaults() *CustomVenda {
	this := CustomVenda{}
	return &this
}

// GetProduto returns the Produto field value if set, zero value otherwise.
func (o *CustomVenda) GetProduto() ProdutoVM {
	if o == nil || o.Produto == nil {
		var ret ProdutoVM
		return ret
	}
	return *o.Produto
}

// GetProdutoOk returns a tuple with the Produto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomVenda) GetProdutoOk() (*ProdutoVM, bool) {
	if o == nil || o.Produto == nil {
		return nil, false
	}
	return o.Produto, true
}

// HasProduto returns a boolean if a field has been set.
func (o *CustomVenda) HasProduto() bool {
	if o != nil && o.Produto != nil {
		return true
	}

	return false
}

// SetProduto gets a reference to the given ProdutoVM and assigns it to the Produto field.
func (o *CustomVenda) SetProduto(v ProdutoVM) {
	o.Produto = &v
}

// GetGvm returns the Gvm field value if set, zero value otherwise.
func (o *CustomVenda) GetGvm() GvmVM {
	if o == nil || o.Gvm == nil {
		var ret GvmVM
		return ret
	}
	return *o.Gvm
}

// GetGvmOk returns a tuple with the Gvm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomVenda) GetGvmOk() (*GvmVM, bool) {
	if o == nil || o.Gvm == nil {
		return nil, false
	}
	return o.Gvm, true
}

// HasGvm returns a boolean if a field has been set.
func (o *CustomVenda) HasGvm() bool {
	if o != nil && o.Gvm != nil {
		return true
	}

	return false
}

// SetGvm gets a reference to the given GvmVM and assigns it to the Gvm field.
func (o *CustomVenda) SetGvm(v GvmVM) {
	o.Gvm = &v
}

// GetVasilhame returns the Vasilhame field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomVenda) GetVasilhame() bool {
	if o == nil || o.Vasilhame.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Vasilhame.Get()
}

// GetVasilhameOk returns a tuple with the Vasilhame field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomVenda) GetVasilhameOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Vasilhame.Get(), o.Vasilhame.IsSet()
}

// HasVasilhame returns a boolean if a field has been set.
func (o *CustomVenda) HasVasilhame() bool {
	if o != nil && o.Vasilhame.IsSet() {
		return true
	}

	return false
}

// SetVasilhame gets a reference to the given NullableBool and assigns it to the Vasilhame field.
func (o *CustomVenda) SetVasilhame(v bool) {
	o.Vasilhame.Set(&v)
}
// SetVasilhameNil sets the value for Vasilhame to be an explicit nil
func (o *CustomVenda) SetVasilhameNil() {
	o.Vasilhame.Set(nil)
}

// UnsetVasilhame ensures that no value is present for Vasilhame, not even an explicit nil
func (o *CustomVenda) UnsetVasilhame() {
	o.Vasilhame.Unset()
}

// GetRefCompartimentoProduto returns the RefCompartimentoProduto field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomVenda) GetRefCompartimentoProduto() int64 {
	if o == nil || o.RefCompartimentoProduto.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefCompartimentoProduto.Get()
}

// GetRefCompartimentoProdutoOk returns a tuple with the RefCompartimentoProduto field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomVenda) GetRefCompartimentoProdutoOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefCompartimentoProduto.Get(), o.RefCompartimentoProduto.IsSet()
}

// HasRefCompartimentoProduto returns a boolean if a field has been set.
func (o *CustomVenda) HasRefCompartimentoProduto() bool {
	if o != nil && o.RefCompartimentoProduto.IsSet() {
		return true
	}

	return false
}

// SetRefCompartimentoProduto gets a reference to the given NullableInt64 and assigns it to the RefCompartimentoProduto field.
func (o *CustomVenda) SetRefCompartimentoProduto(v int64) {
	o.RefCompartimentoProduto.Set(&v)
}
// SetRefCompartimentoProdutoNil sets the value for RefCompartimentoProduto to be an explicit nil
func (o *CustomVenda) SetRefCompartimentoProdutoNil() {
	o.RefCompartimentoProduto.Set(nil)
}

// UnsetRefCompartimentoProduto ensures that no value is present for RefCompartimentoProduto, not even an explicit nil
func (o *CustomVenda) UnsetRefCompartimentoProduto() {
	o.RefCompartimentoProduto.Unset()
}

// GetRefCompartimentoVasilhame returns the RefCompartimentoVasilhame field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CustomVenda) GetRefCompartimentoVasilhame() int64 {
	if o == nil || o.RefCompartimentoVasilhame.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefCompartimentoVasilhame.Get()
}

// GetRefCompartimentoVasilhameOk returns a tuple with the RefCompartimentoVasilhame field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CustomVenda) GetRefCompartimentoVasilhameOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefCompartimentoVasilhame.Get(), o.RefCompartimentoVasilhame.IsSet()
}

// HasRefCompartimentoVasilhame returns a boolean if a field has been set.
func (o *CustomVenda) HasRefCompartimentoVasilhame() bool {
	if o != nil && o.RefCompartimentoVasilhame.IsSet() {
		return true
	}

	return false
}

// SetRefCompartimentoVasilhame gets a reference to the given NullableInt64 and assigns it to the RefCompartimentoVasilhame field.
func (o *CustomVenda) SetRefCompartimentoVasilhame(v int64) {
	o.RefCompartimentoVasilhame.Set(&v)
}
// SetRefCompartimentoVasilhameNil sets the value for RefCompartimentoVasilhame to be an explicit nil
func (o *CustomVenda) SetRefCompartimentoVasilhameNil() {
	o.RefCompartimentoVasilhame.Set(nil)
}

// UnsetRefCompartimentoVasilhame ensures that no value is present for RefCompartimentoVasilhame, not even an explicit nil
func (o *CustomVenda) UnsetRefCompartimentoVasilhame() {
	o.RefCompartimentoVasilhame.Unset()
}

func (o CustomVenda) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Produto != nil {
		toSerialize["produto"] = o.Produto
	}
	if o.Gvm != nil {
		toSerialize["gvm"] = o.Gvm
	}
	if o.Vasilhame.IsSet() {
		toSerialize["vasilhame"] = o.Vasilhame.Get()
	}
	if o.RefCompartimentoProduto.IsSet() {
		toSerialize["refCompartimentoProduto"] = o.RefCompartimentoProduto.Get()
	}
	if o.RefCompartimentoVasilhame.IsSet() {
		toSerialize["refCompartimentoVasilhame"] = o.RefCompartimentoVasilhame.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCustomVenda struct {
	value *CustomVenda
	isSet bool
}

func (v NullableCustomVenda) Get() *CustomVenda {
	return v.value
}

func (v *NullableCustomVenda) Set(val *CustomVenda) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomVenda) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomVenda) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomVenda(val *CustomVenda) *NullableCustomVenda {
	return &NullableCustomVenda{value: val, isSet: true}
}

func (v NullableCustomVenda) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomVenda) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


