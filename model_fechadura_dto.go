/*
 * Petrolifera API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FechaduraDTO struct for FechaduraDTO
type FechaduraDTO struct {
	Id *int64 `json:"id,omitempty"`
	RefCompartimento NullableInt64 `json:"refCompartimento,omitempty"`
	Endereco NullableString `json:"endereco,omitempty"`
	Canal NullableInt32 `json:"canal,omitempty"`
}

// NewFechaduraDTO instantiates a new FechaduraDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFechaduraDTO() *FechaduraDTO {
	this := FechaduraDTO{}
	return &this
}

// NewFechaduraDTOWithDefaults instantiates a new FechaduraDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFechaduraDTOWithDefaults() *FechaduraDTO {
	this := FechaduraDTO{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FechaduraDTO) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FechaduraDTO) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FechaduraDTO) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *FechaduraDTO) SetId(v int64) {
	o.Id = &v
}

// GetRefCompartimento returns the RefCompartimento field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FechaduraDTO) GetRefCompartimento() int64 {
	if o == nil || o.RefCompartimento.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefCompartimento.Get()
}

// GetRefCompartimentoOk returns a tuple with the RefCompartimento field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FechaduraDTO) GetRefCompartimentoOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefCompartimento.Get(), o.RefCompartimento.IsSet()
}

// HasRefCompartimento returns a boolean if a field has been set.
func (o *FechaduraDTO) HasRefCompartimento() bool {
	if o != nil && o.RefCompartimento.IsSet() {
		return true
	}

	return false
}

// SetRefCompartimento gets a reference to the given NullableInt64 and assigns it to the RefCompartimento field.
func (o *FechaduraDTO) SetRefCompartimento(v int64) {
	o.RefCompartimento.Set(&v)
}
// SetRefCompartimentoNil sets the value for RefCompartimento to be an explicit nil
func (o *FechaduraDTO) SetRefCompartimentoNil() {
	o.RefCompartimento.Set(nil)
}

// UnsetRefCompartimento ensures that no value is present for RefCompartimento, not even an explicit nil
func (o *FechaduraDTO) UnsetRefCompartimento() {
	o.RefCompartimento.Unset()
}

// GetEndereco returns the Endereco field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FechaduraDTO) GetEndereco() string {
	if o == nil || o.Endereco.Get() == nil {
		var ret string
		return ret
	}
	return *o.Endereco.Get()
}

// GetEnderecoOk returns a tuple with the Endereco field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FechaduraDTO) GetEnderecoOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Endereco.Get(), o.Endereco.IsSet()
}

// HasEndereco returns a boolean if a field has been set.
func (o *FechaduraDTO) HasEndereco() bool {
	if o != nil && o.Endereco.IsSet() {
		return true
	}

	return false
}

// SetEndereco gets a reference to the given NullableString and assigns it to the Endereco field.
func (o *FechaduraDTO) SetEndereco(v string) {
	o.Endereco.Set(&v)
}
// SetEnderecoNil sets the value for Endereco to be an explicit nil
func (o *FechaduraDTO) SetEnderecoNil() {
	o.Endereco.Set(nil)
}

// UnsetEndereco ensures that no value is present for Endereco, not even an explicit nil
func (o *FechaduraDTO) UnsetEndereco() {
	o.Endereco.Unset()
}

// GetCanal returns the Canal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FechaduraDTO) GetCanal() int32 {
	if o == nil || o.Canal.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Canal.Get()
}

// GetCanalOk returns a tuple with the Canal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FechaduraDTO) GetCanalOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Canal.Get(), o.Canal.IsSet()
}

// HasCanal returns a boolean if a field has been set.
func (o *FechaduraDTO) HasCanal() bool {
	if o != nil && o.Canal.IsSet() {
		return true
	}

	return false
}

// SetCanal gets a reference to the given NullableInt32 and assigns it to the Canal field.
func (o *FechaduraDTO) SetCanal(v int32) {
	o.Canal.Set(&v)
}
// SetCanalNil sets the value for Canal to be an explicit nil
func (o *FechaduraDTO) SetCanalNil() {
	o.Canal.Set(nil)
}

// UnsetCanal ensures that no value is present for Canal, not even an explicit nil
func (o *FechaduraDTO) UnsetCanal() {
	o.Canal.Unset()
}

func (o FechaduraDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.RefCompartimento.IsSet() {
		toSerialize["refCompartimento"] = o.RefCompartimento.Get()
	}
	if o.Endereco.IsSet() {
		toSerialize["endereco"] = o.Endereco.Get()
	}
	if o.Canal.IsSet() {
		toSerialize["canal"] = o.Canal.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableFechaduraDTO struct {
	value *FechaduraDTO
	isSet bool
}

func (v NullableFechaduraDTO) Get() *FechaduraDTO {
	return v.value
}

func (v *NullableFechaduraDTO) Set(val *FechaduraDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableFechaduraDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableFechaduraDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFechaduraDTO(val *FechaduraDTO) *NullableFechaduraDTO {
	return &NullableFechaduraDTO{value: val, isSet: true}
}

func (v NullableFechaduraDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFechaduraDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


