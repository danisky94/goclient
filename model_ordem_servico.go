/*
 * Petrolifera API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// OrdemServico struct for OrdemServico
type OrdemServico struct {
	Id *int64 `json:"id,omitempty"`
	Deleted *int32 `json:"deleted,omitempty"`
	Upd NullableTime `json:"upd,omitempty"`
	Usr NullableInt64 `json:"usr,omitempty"`
	Token NullableString `json:"token,omitempty"`
	RefGvm NullableInt64 `json:"refGvm,omitempty"`
	RefUtilizador NullableInt64 `json:"refUtilizador,omitempty"`
	DataCriacao NullableTime `json:"dataCriacao,omitempty"`
	DataEstado NullableTime `json:"dataEstado,omitempty"`
	RefOperador NullableInt64 `json:"refOperador,omitempty"`
	Estado *EstadosOrdemServico `json:"estado,omitempty"`
	Gvm *Gvm `json:"gvm,omitempty"`
	Utilizador *Utilizador `json:"utilizador,omitempty"`
	OrdemServicoCompartimentos []OrdemServicoCompartimento `json:"ordemServicoCompartimentos,omitempty"`
	OrdemServicoProdutos []OrdemServicoProduto `json:"ordemServicoProdutos,omitempty"`
}

// NewOrdemServico instantiates a new OrdemServico object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrdemServico() *OrdemServico {
	this := OrdemServico{}
	return &this
}

// NewOrdemServicoWithDefaults instantiates a new OrdemServico object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrdemServicoWithDefaults() *OrdemServico {
	this := OrdemServico{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrdemServico) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdemServico) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrdemServico) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OrdemServico) SetId(v int64) {
	o.Id = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *OrdemServico) GetDeleted() int32 {
	if o == nil || o.Deleted == nil {
		var ret int32
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdemServico) GetDeletedOk() (*int32, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *OrdemServico) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given int32 and assigns it to the Deleted field.
func (o *OrdemServico) SetDeleted(v int32) {
	o.Deleted = &v
}

// GetUpd returns the Upd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServico) GetUpd() time.Time {
	if o == nil || o.Upd.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Upd.Get()
}

// GetUpdOk returns a tuple with the Upd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServico) GetUpdOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Upd.Get(), o.Upd.IsSet()
}

// HasUpd returns a boolean if a field has been set.
func (o *OrdemServico) HasUpd() bool {
	if o != nil && o.Upd.IsSet() {
		return true
	}

	return false
}

// SetUpd gets a reference to the given NullableTime and assigns it to the Upd field.
func (o *OrdemServico) SetUpd(v time.Time) {
	o.Upd.Set(&v)
}
// SetUpdNil sets the value for Upd to be an explicit nil
func (o *OrdemServico) SetUpdNil() {
	o.Upd.Set(nil)
}

// UnsetUpd ensures that no value is present for Upd, not even an explicit nil
func (o *OrdemServico) UnsetUpd() {
	o.Upd.Unset()
}

// GetUsr returns the Usr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServico) GetUsr() int64 {
	if o == nil || o.Usr.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Usr.Get()
}

// GetUsrOk returns a tuple with the Usr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServico) GetUsrOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Usr.Get(), o.Usr.IsSet()
}

// HasUsr returns a boolean if a field has been set.
func (o *OrdemServico) HasUsr() bool {
	if o != nil && o.Usr.IsSet() {
		return true
	}

	return false
}

// SetUsr gets a reference to the given NullableInt64 and assigns it to the Usr field.
func (o *OrdemServico) SetUsr(v int64) {
	o.Usr.Set(&v)
}
// SetUsrNil sets the value for Usr to be an explicit nil
func (o *OrdemServico) SetUsrNil() {
	o.Usr.Set(nil)
}

// UnsetUsr ensures that no value is present for Usr, not even an explicit nil
func (o *OrdemServico) UnsetUsr() {
	o.Usr.Unset()
}

// GetToken returns the Token field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServico) GetToken() string {
	if o == nil || o.Token.Get() == nil {
		var ret string
		return ret
	}
	return *o.Token.Get()
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServico) GetTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Token.Get(), o.Token.IsSet()
}

// HasToken returns a boolean if a field has been set.
func (o *OrdemServico) HasToken() bool {
	if o != nil && o.Token.IsSet() {
		return true
	}

	return false
}

// SetToken gets a reference to the given NullableString and assigns it to the Token field.
func (o *OrdemServico) SetToken(v string) {
	o.Token.Set(&v)
}
// SetTokenNil sets the value for Token to be an explicit nil
func (o *OrdemServico) SetTokenNil() {
	o.Token.Set(nil)
}

// UnsetToken ensures that no value is present for Token, not even an explicit nil
func (o *OrdemServico) UnsetToken() {
	o.Token.Unset()
}

// GetRefGvm returns the RefGvm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServico) GetRefGvm() int64 {
	if o == nil || o.RefGvm.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefGvm.Get()
}

// GetRefGvmOk returns a tuple with the RefGvm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServico) GetRefGvmOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefGvm.Get(), o.RefGvm.IsSet()
}

// HasRefGvm returns a boolean if a field has been set.
func (o *OrdemServico) HasRefGvm() bool {
	if o != nil && o.RefGvm.IsSet() {
		return true
	}

	return false
}

// SetRefGvm gets a reference to the given NullableInt64 and assigns it to the RefGvm field.
func (o *OrdemServico) SetRefGvm(v int64) {
	o.RefGvm.Set(&v)
}
// SetRefGvmNil sets the value for RefGvm to be an explicit nil
func (o *OrdemServico) SetRefGvmNil() {
	o.RefGvm.Set(nil)
}

// UnsetRefGvm ensures that no value is present for RefGvm, not even an explicit nil
func (o *OrdemServico) UnsetRefGvm() {
	o.RefGvm.Unset()
}

// GetRefUtilizador returns the RefUtilizador field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServico) GetRefUtilizador() int64 {
	if o == nil || o.RefUtilizador.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefUtilizador.Get()
}

// GetRefUtilizadorOk returns a tuple with the RefUtilizador field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServico) GetRefUtilizadorOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefUtilizador.Get(), o.RefUtilizador.IsSet()
}

// HasRefUtilizador returns a boolean if a field has been set.
func (o *OrdemServico) HasRefUtilizador() bool {
	if o != nil && o.RefUtilizador.IsSet() {
		return true
	}

	return false
}

// SetRefUtilizador gets a reference to the given NullableInt64 and assigns it to the RefUtilizador field.
func (o *OrdemServico) SetRefUtilizador(v int64) {
	o.RefUtilizador.Set(&v)
}
// SetRefUtilizadorNil sets the value for RefUtilizador to be an explicit nil
func (o *OrdemServico) SetRefUtilizadorNil() {
	o.RefUtilizador.Set(nil)
}

// UnsetRefUtilizador ensures that no value is present for RefUtilizador, not even an explicit nil
func (o *OrdemServico) UnsetRefUtilizador() {
	o.RefUtilizador.Unset()
}

// GetDataCriacao returns the DataCriacao field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServico) GetDataCriacao() time.Time {
	if o == nil || o.DataCriacao.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DataCriacao.Get()
}

// GetDataCriacaoOk returns a tuple with the DataCriacao field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServico) GetDataCriacaoOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DataCriacao.Get(), o.DataCriacao.IsSet()
}

// HasDataCriacao returns a boolean if a field has been set.
func (o *OrdemServico) HasDataCriacao() bool {
	if o != nil && o.DataCriacao.IsSet() {
		return true
	}

	return false
}

// SetDataCriacao gets a reference to the given NullableTime and assigns it to the DataCriacao field.
func (o *OrdemServico) SetDataCriacao(v time.Time) {
	o.DataCriacao.Set(&v)
}
// SetDataCriacaoNil sets the value for DataCriacao to be an explicit nil
func (o *OrdemServico) SetDataCriacaoNil() {
	o.DataCriacao.Set(nil)
}

// UnsetDataCriacao ensures that no value is present for DataCriacao, not even an explicit nil
func (o *OrdemServico) UnsetDataCriacao() {
	o.DataCriacao.Unset()
}

// GetDataEstado returns the DataEstado field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServico) GetDataEstado() time.Time {
	if o == nil || o.DataEstado.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DataEstado.Get()
}

// GetDataEstadoOk returns a tuple with the DataEstado field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServico) GetDataEstadoOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DataEstado.Get(), o.DataEstado.IsSet()
}

// HasDataEstado returns a boolean if a field has been set.
func (o *OrdemServico) HasDataEstado() bool {
	if o != nil && o.DataEstado.IsSet() {
		return true
	}

	return false
}

// SetDataEstado gets a reference to the given NullableTime and assigns it to the DataEstado field.
func (o *OrdemServico) SetDataEstado(v time.Time) {
	o.DataEstado.Set(&v)
}
// SetDataEstadoNil sets the value for DataEstado to be an explicit nil
func (o *OrdemServico) SetDataEstadoNil() {
	o.DataEstado.Set(nil)
}

// UnsetDataEstado ensures that no value is present for DataEstado, not even an explicit nil
func (o *OrdemServico) UnsetDataEstado() {
	o.DataEstado.Unset()
}

// GetRefOperador returns the RefOperador field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServico) GetRefOperador() int64 {
	if o == nil || o.RefOperador.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefOperador.Get()
}

// GetRefOperadorOk returns a tuple with the RefOperador field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServico) GetRefOperadorOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefOperador.Get(), o.RefOperador.IsSet()
}

// HasRefOperador returns a boolean if a field has been set.
func (o *OrdemServico) HasRefOperador() bool {
	if o != nil && o.RefOperador.IsSet() {
		return true
	}

	return false
}

// SetRefOperador gets a reference to the given NullableInt64 and assigns it to the RefOperador field.
func (o *OrdemServico) SetRefOperador(v int64) {
	o.RefOperador.Set(&v)
}
// SetRefOperadorNil sets the value for RefOperador to be an explicit nil
func (o *OrdemServico) SetRefOperadorNil() {
	o.RefOperador.Set(nil)
}

// UnsetRefOperador ensures that no value is present for RefOperador, not even an explicit nil
func (o *OrdemServico) UnsetRefOperador() {
	o.RefOperador.Unset()
}

// GetEstado returns the Estado field value if set, zero value otherwise.
func (o *OrdemServico) GetEstado() EstadosOrdemServico {
	if o == nil || o.Estado == nil {
		var ret EstadosOrdemServico
		return ret
	}
	return *o.Estado
}

// GetEstadoOk returns a tuple with the Estado field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdemServico) GetEstadoOk() (*EstadosOrdemServico, bool) {
	if o == nil || o.Estado == nil {
		return nil, false
	}
	return o.Estado, true
}

// HasEstado returns a boolean if a field has been set.
func (o *OrdemServico) HasEstado() bool {
	if o != nil && o.Estado != nil {
		return true
	}

	return false
}

// SetEstado gets a reference to the given EstadosOrdemServico and assigns it to the Estado field.
func (o *OrdemServico) SetEstado(v EstadosOrdemServico) {
	o.Estado = &v
}

// GetGvm returns the Gvm field value if set, zero value otherwise.
func (o *OrdemServico) GetGvm() Gvm {
	if o == nil || o.Gvm == nil {
		var ret Gvm
		return ret
	}
	return *o.Gvm
}

// GetGvmOk returns a tuple with the Gvm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdemServico) GetGvmOk() (*Gvm, bool) {
	if o == nil || o.Gvm == nil {
		return nil, false
	}
	return o.Gvm, true
}

// HasGvm returns a boolean if a field has been set.
func (o *OrdemServico) HasGvm() bool {
	if o != nil && o.Gvm != nil {
		return true
	}

	return false
}

// SetGvm gets a reference to the given Gvm and assigns it to the Gvm field.
func (o *OrdemServico) SetGvm(v Gvm) {
	o.Gvm = &v
}

// GetUtilizador returns the Utilizador field value if set, zero value otherwise.
func (o *OrdemServico) GetUtilizador() Utilizador {
	if o == nil || o.Utilizador == nil {
		var ret Utilizador
		return ret
	}
	return *o.Utilizador
}

// GetUtilizadorOk returns a tuple with the Utilizador field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdemServico) GetUtilizadorOk() (*Utilizador, bool) {
	if o == nil || o.Utilizador == nil {
		return nil, false
	}
	return o.Utilizador, true
}

// HasUtilizador returns a boolean if a field has been set.
func (o *OrdemServico) HasUtilizador() bool {
	if o != nil && o.Utilizador != nil {
		return true
	}

	return false
}

// SetUtilizador gets a reference to the given Utilizador and assigns it to the Utilizador field.
func (o *OrdemServico) SetUtilizador(v Utilizador) {
	o.Utilizador = &v
}

// GetOrdemServicoCompartimentos returns the OrdemServicoCompartimentos field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServico) GetOrdemServicoCompartimentos() []OrdemServicoCompartimento {
	if o == nil  {
		var ret []OrdemServicoCompartimento
		return ret
	}
	return o.OrdemServicoCompartimentos
}

// GetOrdemServicoCompartimentosOk returns a tuple with the OrdemServicoCompartimentos field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServico) GetOrdemServicoCompartimentosOk() (*[]OrdemServicoCompartimento, bool) {
	if o == nil || o.OrdemServicoCompartimentos == nil {
		return nil, false
	}
	return &o.OrdemServicoCompartimentos, true
}

// HasOrdemServicoCompartimentos returns a boolean if a field has been set.
func (o *OrdemServico) HasOrdemServicoCompartimentos() bool {
	if o != nil && o.OrdemServicoCompartimentos != nil {
		return true
	}

	return false
}

// SetOrdemServicoCompartimentos gets a reference to the given []OrdemServicoCompartimento and assigns it to the OrdemServicoCompartimentos field.
func (o *OrdemServico) SetOrdemServicoCompartimentos(v []OrdemServicoCompartimento) {
	o.OrdemServicoCompartimentos = v
}

// GetOrdemServicoProdutos returns the OrdemServicoProdutos field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServico) GetOrdemServicoProdutos() []OrdemServicoProduto {
	if o == nil  {
		var ret []OrdemServicoProduto
		return ret
	}
	return o.OrdemServicoProdutos
}

// GetOrdemServicoProdutosOk returns a tuple with the OrdemServicoProdutos field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServico) GetOrdemServicoProdutosOk() (*[]OrdemServicoProduto, bool) {
	if o == nil || o.OrdemServicoProdutos == nil {
		return nil, false
	}
	return &o.OrdemServicoProdutos, true
}

// HasOrdemServicoProdutos returns a boolean if a field has been set.
func (o *OrdemServico) HasOrdemServicoProdutos() bool {
	if o != nil && o.OrdemServicoProdutos != nil {
		return true
	}

	return false
}

// SetOrdemServicoProdutos gets a reference to the given []OrdemServicoProduto and assigns it to the OrdemServicoProdutos field.
func (o *OrdemServico) SetOrdemServicoProdutos(v []OrdemServicoProduto) {
	o.OrdemServicoProdutos = v
}

func (o OrdemServico) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Upd.IsSet() {
		toSerialize["upd"] = o.Upd.Get()
	}
	if o.Usr.IsSet() {
		toSerialize["usr"] = o.Usr.Get()
	}
	if o.Token.IsSet() {
		toSerialize["token"] = o.Token.Get()
	}
	if o.RefGvm.IsSet() {
		toSerialize["refGvm"] = o.RefGvm.Get()
	}
	if o.RefUtilizador.IsSet() {
		toSerialize["refUtilizador"] = o.RefUtilizador.Get()
	}
	if o.DataCriacao.IsSet() {
		toSerialize["dataCriacao"] = o.DataCriacao.Get()
	}
	if o.DataEstado.IsSet() {
		toSerialize["dataEstado"] = o.DataEstado.Get()
	}
	if o.RefOperador.IsSet() {
		toSerialize["refOperador"] = o.RefOperador.Get()
	}
	if o.Estado != nil {
		toSerialize["estado"] = o.Estado
	}
	if o.Gvm != nil {
		toSerialize["gvm"] = o.Gvm
	}
	if o.Utilizador != nil {
		toSerialize["utilizador"] = o.Utilizador
	}
	if o.OrdemServicoCompartimentos != nil {
		toSerialize["ordemServicoCompartimentos"] = o.OrdemServicoCompartimentos
	}
	if o.OrdemServicoProdutos != nil {
		toSerialize["ordemServicoProdutos"] = o.OrdemServicoProdutos
	}
	return json.Marshal(toSerialize)
}

type NullableOrdemServico struct {
	value *OrdemServico
	isSet bool
}

func (v NullableOrdemServico) Get() *OrdemServico {
	return v.value
}

func (v *NullableOrdemServico) Set(val *OrdemServico) {
	v.value = val
	v.isSet = true
}

func (v NullableOrdemServico) IsSet() bool {
	return v.isSet
}

func (v *NullableOrdemServico) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrdemServico(val *OrdemServico) *NullableOrdemServico {
	return &NullableOrdemServico{value: val, isSet: true}
}

func (v NullableOrdemServico) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrdemServico) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


