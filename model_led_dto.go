/*
 * Petrolifera API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LedDTO struct for LedDTO
type LedDTO struct {
	Id *int64 `json:"id,omitempty"`
	Address NullableString `json:"address,omitempty"`
	Channel NullableInt32 `json:"channel,omitempty"`
	Start NullableInt32 `json:"start,omitempty"`
	End NullableInt32 `json:"end,omitempty"`
}

// NewLedDTO instantiates a new LedDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLedDTO() *LedDTO {
	this := LedDTO{}
	return &this
}

// NewLedDTOWithDefaults instantiates a new LedDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLedDTOWithDefaults() *LedDTO {
	this := LedDTO{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LedDTO) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedDTO) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LedDTO) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *LedDTO) SetId(v int64) {
	o.Id = &v
}

// GetAddress returns the Address field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LedDTO) GetAddress() string {
	if o == nil || o.Address.Get() == nil {
		var ret string
		return ret
	}
	return *o.Address.Get()
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LedDTO) GetAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Address.Get(), o.Address.IsSet()
}

// HasAddress returns a boolean if a field has been set.
func (o *LedDTO) HasAddress() bool {
	if o != nil && o.Address.IsSet() {
		return true
	}

	return false
}

// SetAddress gets a reference to the given NullableString and assigns it to the Address field.
func (o *LedDTO) SetAddress(v string) {
	o.Address.Set(&v)
}
// SetAddressNil sets the value for Address to be an explicit nil
func (o *LedDTO) SetAddressNil() {
	o.Address.Set(nil)
}

// UnsetAddress ensures that no value is present for Address, not even an explicit nil
func (o *LedDTO) UnsetAddress() {
	o.Address.Unset()
}

// GetChannel returns the Channel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LedDTO) GetChannel() int32 {
	if o == nil || o.Channel.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Channel.Get()
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LedDTO) GetChannelOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Channel.Get(), o.Channel.IsSet()
}

// HasChannel returns a boolean if a field has been set.
func (o *LedDTO) HasChannel() bool {
	if o != nil && o.Channel.IsSet() {
		return true
	}

	return false
}

// SetChannel gets a reference to the given NullableInt32 and assigns it to the Channel field.
func (o *LedDTO) SetChannel(v int32) {
	o.Channel.Set(&v)
}
// SetChannelNil sets the value for Channel to be an explicit nil
func (o *LedDTO) SetChannelNil() {
	o.Channel.Set(nil)
}

// UnsetChannel ensures that no value is present for Channel, not even an explicit nil
func (o *LedDTO) UnsetChannel() {
	o.Channel.Unset()
}

// GetStart returns the Start field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LedDTO) GetStart() int32 {
	if o == nil || o.Start.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Start.Get()
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LedDTO) GetStartOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Start.Get(), o.Start.IsSet()
}

// HasStart returns a boolean if a field has been set.
func (o *LedDTO) HasStart() bool {
	if o != nil && o.Start.IsSet() {
		return true
	}

	return false
}

// SetStart gets a reference to the given NullableInt32 and assigns it to the Start field.
func (o *LedDTO) SetStart(v int32) {
	o.Start.Set(&v)
}
// SetStartNil sets the value for Start to be an explicit nil
func (o *LedDTO) SetStartNil() {
	o.Start.Set(nil)
}

// UnsetStart ensures that no value is present for Start, not even an explicit nil
func (o *LedDTO) UnsetStart() {
	o.Start.Unset()
}

// GetEnd returns the End field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LedDTO) GetEnd() int32 {
	if o == nil || o.End.Get() == nil {
		var ret int32
		return ret
	}
	return *o.End.Get()
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LedDTO) GetEndOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.End.Get(), o.End.IsSet()
}

// HasEnd returns a boolean if a field has been set.
func (o *LedDTO) HasEnd() bool {
	if o != nil && o.End.IsSet() {
		return true
	}

	return false
}

// SetEnd gets a reference to the given NullableInt32 and assigns it to the End field.
func (o *LedDTO) SetEnd(v int32) {
	o.End.Set(&v)
}
// SetEndNil sets the value for End to be an explicit nil
func (o *LedDTO) SetEndNil() {
	o.End.Set(nil)
}

// UnsetEnd ensures that no value is present for End, not even an explicit nil
func (o *LedDTO) UnsetEnd() {
	o.End.Unset()
}

func (o LedDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Address.IsSet() {
		toSerialize["address"] = o.Address.Get()
	}
	if o.Channel.IsSet() {
		toSerialize["channel"] = o.Channel.Get()
	}
	if o.Start.IsSet() {
		toSerialize["start"] = o.Start.Get()
	}
	if o.End.IsSet() {
		toSerialize["end"] = o.End.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableLedDTO struct {
	value *LedDTO
	isSet bool
}

func (v NullableLedDTO) Get() *LedDTO {
	return v.value
}

func (v *NullableLedDTO) Set(val *LedDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableLedDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableLedDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLedDTO(val *LedDTO) *NullableLedDTO {
	return &NullableLedDTO{value: val, isSet: true}
}

func (v NullableLedDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLedDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


