/*
 * Petrolifera API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Local struct for Local
type Local struct {
	Id *int64 `json:"id,omitempty"`
	Deleted *int32 `json:"deleted,omitempty"`
	Upd NullableTime `json:"upd,omitempty"`
	Usr NullableInt64 `json:"usr,omitempty"`
	Nome NullableString `json:"nome,omitempty"`
	Morada NullableString `json:"morada,omitempty"`
	RefAssistencia NullableInt64 `json:"refAssistencia,omitempty"`
	RefGestorTecnico NullableInt64 `json:"refGestorTecnico,omitempty"`
	RefReposicao NullableInt64 `json:"refReposicao,omitempty"`
	RefGestorReposicao NullableInt64 `json:"refGestorReposicao,omitempty"`
	Latitude NullableString `json:"latitude,omitempty"`
	Longitude NullableString `json:"longitude,omitempty"`
	Gvms []Gvm `json:"gvms,omitempty"`
}

// NewLocal instantiates a new Local object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocal() *Local {
	this := Local{}
	return &this
}

// NewLocalWithDefaults instantiates a new Local object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalWithDefaults() *Local {
	this := Local{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Local) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Local) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Local) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *Local) SetId(v int64) {
	o.Id = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *Local) GetDeleted() int32 {
	if o == nil || o.Deleted == nil {
		var ret int32
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Local) GetDeletedOk() (*int32, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *Local) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given int32 and assigns it to the Deleted field.
func (o *Local) SetDeleted(v int32) {
	o.Deleted = &v
}

// GetUpd returns the Upd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Local) GetUpd() time.Time {
	if o == nil || o.Upd.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Upd.Get()
}

// GetUpdOk returns a tuple with the Upd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Local) GetUpdOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Upd.Get(), o.Upd.IsSet()
}

// HasUpd returns a boolean if a field has been set.
func (o *Local) HasUpd() bool {
	if o != nil && o.Upd.IsSet() {
		return true
	}

	return false
}

// SetUpd gets a reference to the given NullableTime and assigns it to the Upd field.
func (o *Local) SetUpd(v time.Time) {
	o.Upd.Set(&v)
}
// SetUpdNil sets the value for Upd to be an explicit nil
func (o *Local) SetUpdNil() {
	o.Upd.Set(nil)
}

// UnsetUpd ensures that no value is present for Upd, not even an explicit nil
func (o *Local) UnsetUpd() {
	o.Upd.Unset()
}

// GetUsr returns the Usr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Local) GetUsr() int64 {
	if o == nil || o.Usr.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Usr.Get()
}

// GetUsrOk returns a tuple with the Usr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Local) GetUsrOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Usr.Get(), o.Usr.IsSet()
}

// HasUsr returns a boolean if a field has been set.
func (o *Local) HasUsr() bool {
	if o != nil && o.Usr.IsSet() {
		return true
	}

	return false
}

// SetUsr gets a reference to the given NullableInt64 and assigns it to the Usr field.
func (o *Local) SetUsr(v int64) {
	o.Usr.Set(&v)
}
// SetUsrNil sets the value for Usr to be an explicit nil
func (o *Local) SetUsrNil() {
	o.Usr.Set(nil)
}

// UnsetUsr ensures that no value is present for Usr, not even an explicit nil
func (o *Local) UnsetUsr() {
	o.Usr.Unset()
}

// GetNome returns the Nome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Local) GetNome() string {
	if o == nil || o.Nome.Get() == nil {
		var ret string
		return ret
	}
	return *o.Nome.Get()
}

// GetNomeOk returns a tuple with the Nome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Local) GetNomeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Nome.Get(), o.Nome.IsSet()
}

// HasNome returns a boolean if a field has been set.
func (o *Local) HasNome() bool {
	if o != nil && o.Nome.IsSet() {
		return true
	}

	return false
}

// SetNome gets a reference to the given NullableString and assigns it to the Nome field.
func (o *Local) SetNome(v string) {
	o.Nome.Set(&v)
}
// SetNomeNil sets the value for Nome to be an explicit nil
func (o *Local) SetNomeNil() {
	o.Nome.Set(nil)
}

// UnsetNome ensures that no value is present for Nome, not even an explicit nil
func (o *Local) UnsetNome() {
	o.Nome.Unset()
}

// GetMorada returns the Morada field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Local) GetMorada() string {
	if o == nil || o.Morada.Get() == nil {
		var ret string
		return ret
	}
	return *o.Morada.Get()
}

// GetMoradaOk returns a tuple with the Morada field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Local) GetMoradaOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Morada.Get(), o.Morada.IsSet()
}

// HasMorada returns a boolean if a field has been set.
func (o *Local) HasMorada() bool {
	if o != nil && o.Morada.IsSet() {
		return true
	}

	return false
}

// SetMorada gets a reference to the given NullableString and assigns it to the Morada field.
func (o *Local) SetMorada(v string) {
	o.Morada.Set(&v)
}
// SetMoradaNil sets the value for Morada to be an explicit nil
func (o *Local) SetMoradaNil() {
	o.Morada.Set(nil)
}

// UnsetMorada ensures that no value is present for Morada, not even an explicit nil
func (o *Local) UnsetMorada() {
	o.Morada.Unset()
}

// GetRefAssistencia returns the RefAssistencia field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Local) GetRefAssistencia() int64 {
	if o == nil || o.RefAssistencia.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefAssistencia.Get()
}

// GetRefAssistenciaOk returns a tuple with the RefAssistencia field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Local) GetRefAssistenciaOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefAssistencia.Get(), o.RefAssistencia.IsSet()
}

// HasRefAssistencia returns a boolean if a field has been set.
func (o *Local) HasRefAssistencia() bool {
	if o != nil && o.RefAssistencia.IsSet() {
		return true
	}

	return false
}

// SetRefAssistencia gets a reference to the given NullableInt64 and assigns it to the RefAssistencia field.
func (o *Local) SetRefAssistencia(v int64) {
	o.RefAssistencia.Set(&v)
}
// SetRefAssistenciaNil sets the value for RefAssistencia to be an explicit nil
func (o *Local) SetRefAssistenciaNil() {
	o.RefAssistencia.Set(nil)
}

// UnsetRefAssistencia ensures that no value is present for RefAssistencia, not even an explicit nil
func (o *Local) UnsetRefAssistencia() {
	o.RefAssistencia.Unset()
}

// GetRefGestorTecnico returns the RefGestorTecnico field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Local) GetRefGestorTecnico() int64 {
	if o == nil || o.RefGestorTecnico.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefGestorTecnico.Get()
}

// GetRefGestorTecnicoOk returns a tuple with the RefGestorTecnico field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Local) GetRefGestorTecnicoOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefGestorTecnico.Get(), o.RefGestorTecnico.IsSet()
}

// HasRefGestorTecnico returns a boolean if a field has been set.
func (o *Local) HasRefGestorTecnico() bool {
	if o != nil && o.RefGestorTecnico.IsSet() {
		return true
	}

	return false
}

// SetRefGestorTecnico gets a reference to the given NullableInt64 and assigns it to the RefGestorTecnico field.
func (o *Local) SetRefGestorTecnico(v int64) {
	o.RefGestorTecnico.Set(&v)
}
// SetRefGestorTecnicoNil sets the value for RefGestorTecnico to be an explicit nil
func (o *Local) SetRefGestorTecnicoNil() {
	o.RefGestorTecnico.Set(nil)
}

// UnsetRefGestorTecnico ensures that no value is present for RefGestorTecnico, not even an explicit nil
func (o *Local) UnsetRefGestorTecnico() {
	o.RefGestorTecnico.Unset()
}

// GetRefReposicao returns the RefReposicao field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Local) GetRefReposicao() int64 {
	if o == nil || o.RefReposicao.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefReposicao.Get()
}

// GetRefReposicaoOk returns a tuple with the RefReposicao field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Local) GetRefReposicaoOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefReposicao.Get(), o.RefReposicao.IsSet()
}

// HasRefReposicao returns a boolean if a field has been set.
func (o *Local) HasRefReposicao() bool {
	if o != nil && o.RefReposicao.IsSet() {
		return true
	}

	return false
}

// SetRefReposicao gets a reference to the given NullableInt64 and assigns it to the RefReposicao field.
func (o *Local) SetRefReposicao(v int64) {
	o.RefReposicao.Set(&v)
}
// SetRefReposicaoNil sets the value for RefReposicao to be an explicit nil
func (o *Local) SetRefReposicaoNil() {
	o.RefReposicao.Set(nil)
}

// UnsetRefReposicao ensures that no value is present for RefReposicao, not even an explicit nil
func (o *Local) UnsetRefReposicao() {
	o.RefReposicao.Unset()
}

// GetRefGestorReposicao returns the RefGestorReposicao field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Local) GetRefGestorReposicao() int64 {
	if o == nil || o.RefGestorReposicao.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefGestorReposicao.Get()
}

// GetRefGestorReposicaoOk returns a tuple with the RefGestorReposicao field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Local) GetRefGestorReposicaoOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefGestorReposicao.Get(), o.RefGestorReposicao.IsSet()
}

// HasRefGestorReposicao returns a boolean if a field has been set.
func (o *Local) HasRefGestorReposicao() bool {
	if o != nil && o.RefGestorReposicao.IsSet() {
		return true
	}

	return false
}

// SetRefGestorReposicao gets a reference to the given NullableInt64 and assigns it to the RefGestorReposicao field.
func (o *Local) SetRefGestorReposicao(v int64) {
	o.RefGestorReposicao.Set(&v)
}
// SetRefGestorReposicaoNil sets the value for RefGestorReposicao to be an explicit nil
func (o *Local) SetRefGestorReposicaoNil() {
	o.RefGestorReposicao.Set(nil)
}

// UnsetRefGestorReposicao ensures that no value is present for RefGestorReposicao, not even an explicit nil
func (o *Local) UnsetRefGestorReposicao() {
	o.RefGestorReposicao.Unset()
}

// GetLatitude returns the Latitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Local) GetLatitude() string {
	if o == nil || o.Latitude.Get() == nil {
		var ret string
		return ret
	}
	return *o.Latitude.Get()
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Local) GetLatitudeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Latitude.Get(), o.Latitude.IsSet()
}

// HasLatitude returns a boolean if a field has been set.
func (o *Local) HasLatitude() bool {
	if o != nil && o.Latitude.IsSet() {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given NullableString and assigns it to the Latitude field.
func (o *Local) SetLatitude(v string) {
	o.Latitude.Set(&v)
}
// SetLatitudeNil sets the value for Latitude to be an explicit nil
func (o *Local) SetLatitudeNil() {
	o.Latitude.Set(nil)
}

// UnsetLatitude ensures that no value is present for Latitude, not even an explicit nil
func (o *Local) UnsetLatitude() {
	o.Latitude.Unset()
}

// GetLongitude returns the Longitude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Local) GetLongitude() string {
	if o == nil || o.Longitude.Get() == nil {
		var ret string
		return ret
	}
	return *o.Longitude.Get()
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Local) GetLongitudeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Longitude.Get(), o.Longitude.IsSet()
}

// HasLongitude returns a boolean if a field has been set.
func (o *Local) HasLongitude() bool {
	if o != nil && o.Longitude.IsSet() {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given NullableString and assigns it to the Longitude field.
func (o *Local) SetLongitude(v string) {
	o.Longitude.Set(&v)
}
// SetLongitudeNil sets the value for Longitude to be an explicit nil
func (o *Local) SetLongitudeNil() {
	o.Longitude.Set(nil)
}

// UnsetLongitude ensures that no value is present for Longitude, not even an explicit nil
func (o *Local) UnsetLongitude() {
	o.Longitude.Unset()
}

// GetGvms returns the Gvms field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Local) GetGvms() []Gvm {
	if o == nil  {
		var ret []Gvm
		return ret
	}
	return o.Gvms
}

// GetGvmsOk returns a tuple with the Gvms field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Local) GetGvmsOk() (*[]Gvm, bool) {
	if o == nil || o.Gvms == nil {
		return nil, false
	}
	return &o.Gvms, true
}

// HasGvms returns a boolean if a field has been set.
func (o *Local) HasGvms() bool {
	if o != nil && o.Gvms != nil {
		return true
	}

	return false
}

// SetGvms gets a reference to the given []Gvm and assigns it to the Gvms field.
func (o *Local) SetGvms(v []Gvm) {
	o.Gvms = v
}

func (o Local) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Upd.IsSet() {
		toSerialize["upd"] = o.Upd.Get()
	}
	if o.Usr.IsSet() {
		toSerialize["usr"] = o.Usr.Get()
	}
	if o.Nome.IsSet() {
		toSerialize["nome"] = o.Nome.Get()
	}
	if o.Morada.IsSet() {
		toSerialize["morada"] = o.Morada.Get()
	}
	if o.RefAssistencia.IsSet() {
		toSerialize["refAssistencia"] = o.RefAssistencia.Get()
	}
	if o.RefGestorTecnico.IsSet() {
		toSerialize["refGestorTecnico"] = o.RefGestorTecnico.Get()
	}
	if o.RefReposicao.IsSet() {
		toSerialize["refReposicao"] = o.RefReposicao.Get()
	}
	if o.RefGestorReposicao.IsSet() {
		toSerialize["refGestorReposicao"] = o.RefGestorReposicao.Get()
	}
	if o.Latitude.IsSet() {
		toSerialize["latitude"] = o.Latitude.Get()
	}
	if o.Longitude.IsSet() {
		toSerialize["longitude"] = o.Longitude.Get()
	}
	if o.Gvms != nil {
		toSerialize["gvms"] = o.Gvms
	}
	return json.Marshal(toSerialize)
}

type NullableLocal struct {
	value *Local
	isSet bool
}

func (v NullableLocal) Get() *Local {
	return v.value
}

func (v *NullableLocal) Set(val *Local) {
	v.value = val
	v.isSet = true
}

func (v NullableLocal) IsSet() bool {
	return v.isSet
}

func (v *NullableLocal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocal(val *Local) *NullableLocal {
	return &NullableLocal{value: val, isSet: true}
}

func (v NullableLocal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


