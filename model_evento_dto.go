/*
 * Petrolifera API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EventoDTO struct for EventoDTO
type EventoDTO struct {
	Id *int64 `json:"id,omitempty"`
	RefTipoEvento NullableInt64 `json:"refTipoEvento,omitempty"`
	Mensagem NullableString `json:"mensagem,omitempty"`
	RefGvm NullableInt64 `json:"refGvm,omitempty"`
}

// NewEventoDTO instantiates a new EventoDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventoDTO() *EventoDTO {
	this := EventoDTO{}
	return &this
}

// NewEventoDTOWithDefaults instantiates a new EventoDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventoDTOWithDefaults() *EventoDTO {
	this := EventoDTO{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EventoDTO) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventoDTO) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EventoDTO) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *EventoDTO) SetId(v int64) {
	o.Id = &v
}

// GetRefTipoEvento returns the RefTipoEvento field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EventoDTO) GetRefTipoEvento() int64 {
	if o == nil || o.RefTipoEvento.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefTipoEvento.Get()
}

// GetRefTipoEventoOk returns a tuple with the RefTipoEvento field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EventoDTO) GetRefTipoEventoOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefTipoEvento.Get(), o.RefTipoEvento.IsSet()
}

// HasRefTipoEvento returns a boolean if a field has been set.
func (o *EventoDTO) HasRefTipoEvento() bool {
	if o != nil && o.RefTipoEvento.IsSet() {
		return true
	}

	return false
}

// SetRefTipoEvento gets a reference to the given NullableInt64 and assigns it to the RefTipoEvento field.
func (o *EventoDTO) SetRefTipoEvento(v int64) {
	o.RefTipoEvento.Set(&v)
}
// SetRefTipoEventoNil sets the value for RefTipoEvento to be an explicit nil
func (o *EventoDTO) SetRefTipoEventoNil() {
	o.RefTipoEvento.Set(nil)
}

// UnsetRefTipoEvento ensures that no value is present for RefTipoEvento, not even an explicit nil
func (o *EventoDTO) UnsetRefTipoEvento() {
	o.RefTipoEvento.Unset()
}

// GetMensagem returns the Mensagem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EventoDTO) GetMensagem() string {
	if o == nil || o.Mensagem.Get() == nil {
		var ret string
		return ret
	}
	return *o.Mensagem.Get()
}

// GetMensagemOk returns a tuple with the Mensagem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EventoDTO) GetMensagemOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Mensagem.Get(), o.Mensagem.IsSet()
}

// HasMensagem returns a boolean if a field has been set.
func (o *EventoDTO) HasMensagem() bool {
	if o != nil && o.Mensagem.IsSet() {
		return true
	}

	return false
}

// SetMensagem gets a reference to the given NullableString and assigns it to the Mensagem field.
func (o *EventoDTO) SetMensagem(v string) {
	o.Mensagem.Set(&v)
}
// SetMensagemNil sets the value for Mensagem to be an explicit nil
func (o *EventoDTO) SetMensagemNil() {
	o.Mensagem.Set(nil)
}

// UnsetMensagem ensures that no value is present for Mensagem, not even an explicit nil
func (o *EventoDTO) UnsetMensagem() {
	o.Mensagem.Unset()
}

// GetRefGvm returns the RefGvm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EventoDTO) GetRefGvm() int64 {
	if o == nil || o.RefGvm.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefGvm.Get()
}

// GetRefGvmOk returns a tuple with the RefGvm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EventoDTO) GetRefGvmOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefGvm.Get(), o.RefGvm.IsSet()
}

// HasRefGvm returns a boolean if a field has been set.
func (o *EventoDTO) HasRefGvm() bool {
	if o != nil && o.RefGvm.IsSet() {
		return true
	}

	return false
}

// SetRefGvm gets a reference to the given NullableInt64 and assigns it to the RefGvm field.
func (o *EventoDTO) SetRefGvm(v int64) {
	o.RefGvm.Set(&v)
}
// SetRefGvmNil sets the value for RefGvm to be an explicit nil
func (o *EventoDTO) SetRefGvmNil() {
	o.RefGvm.Set(nil)
}

// UnsetRefGvm ensures that no value is present for RefGvm, not even an explicit nil
func (o *EventoDTO) UnsetRefGvm() {
	o.RefGvm.Unset()
}

func (o EventoDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.RefTipoEvento.IsSet() {
		toSerialize["refTipoEvento"] = o.RefTipoEvento.Get()
	}
	if o.Mensagem.IsSet() {
		toSerialize["mensagem"] = o.Mensagem.Get()
	}
	if o.RefGvm.IsSet() {
		toSerialize["refGvm"] = o.RefGvm.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableEventoDTO struct {
	value *EventoDTO
	isSet bool
}

func (v NullableEventoDTO) Get() *EventoDTO {
	return v.value
}

func (v *NullableEventoDTO) Set(val *EventoDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEventoDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEventoDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventoDTO(val *EventoDTO) *NullableEventoDTO {
	return &NullableEventoDTO{value: val, isSet: true}
}

func (v NullableEventoDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventoDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


