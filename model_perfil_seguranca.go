/*
 * Petrolifera API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PerfilSeguranca struct for PerfilSeguranca
type PerfilSeguranca struct {
	Id *int64 `json:"id,omitempty"`
	Deleted *int32 `json:"deleted,omitempty"`
	Upd NullableTime `json:"upd,omitempty"`
	Usr NullableInt64 `json:"usr,omitempty"`
	Nome NullableString `json:"nome,omitempty"`
	PerfilSegurancaPermissaos []PerfilSegurancaPermissao `json:"perfilSegurancaPermissaos,omitempty"`
	UtilizadorPerfilSegurancas []UtilizadorPerfilSeguranca `json:"utilizadorPerfilSegurancas,omitempty"`
}

// NewPerfilSeguranca instantiates a new PerfilSeguranca object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerfilSeguranca() *PerfilSeguranca {
	this := PerfilSeguranca{}
	return &this
}

// NewPerfilSegurancaWithDefaults instantiates a new PerfilSeguranca object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerfilSegurancaWithDefaults() *PerfilSeguranca {
	this := PerfilSeguranca{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PerfilSeguranca) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfilSeguranca) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PerfilSeguranca) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *PerfilSeguranca) SetId(v int64) {
	o.Id = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *PerfilSeguranca) GetDeleted() int32 {
	if o == nil || o.Deleted == nil {
		var ret int32
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerfilSeguranca) GetDeletedOk() (*int32, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *PerfilSeguranca) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given int32 and assigns it to the Deleted field.
func (o *PerfilSeguranca) SetDeleted(v int32) {
	o.Deleted = &v
}

// GetUpd returns the Upd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerfilSeguranca) GetUpd() time.Time {
	if o == nil || o.Upd.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Upd.Get()
}

// GetUpdOk returns a tuple with the Upd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerfilSeguranca) GetUpdOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Upd.Get(), o.Upd.IsSet()
}

// HasUpd returns a boolean if a field has been set.
func (o *PerfilSeguranca) HasUpd() bool {
	if o != nil && o.Upd.IsSet() {
		return true
	}

	return false
}

// SetUpd gets a reference to the given NullableTime and assigns it to the Upd field.
func (o *PerfilSeguranca) SetUpd(v time.Time) {
	o.Upd.Set(&v)
}
// SetUpdNil sets the value for Upd to be an explicit nil
func (o *PerfilSeguranca) SetUpdNil() {
	o.Upd.Set(nil)
}

// UnsetUpd ensures that no value is present for Upd, not even an explicit nil
func (o *PerfilSeguranca) UnsetUpd() {
	o.Upd.Unset()
}

// GetUsr returns the Usr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerfilSeguranca) GetUsr() int64 {
	if o == nil || o.Usr.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Usr.Get()
}

// GetUsrOk returns a tuple with the Usr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerfilSeguranca) GetUsrOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Usr.Get(), o.Usr.IsSet()
}

// HasUsr returns a boolean if a field has been set.
func (o *PerfilSeguranca) HasUsr() bool {
	if o != nil && o.Usr.IsSet() {
		return true
	}

	return false
}

// SetUsr gets a reference to the given NullableInt64 and assigns it to the Usr field.
func (o *PerfilSeguranca) SetUsr(v int64) {
	o.Usr.Set(&v)
}
// SetUsrNil sets the value for Usr to be an explicit nil
func (o *PerfilSeguranca) SetUsrNil() {
	o.Usr.Set(nil)
}

// UnsetUsr ensures that no value is present for Usr, not even an explicit nil
func (o *PerfilSeguranca) UnsetUsr() {
	o.Usr.Unset()
}

// GetNome returns the Nome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerfilSeguranca) GetNome() string {
	if o == nil || o.Nome.Get() == nil {
		var ret string
		return ret
	}
	return *o.Nome.Get()
}

// GetNomeOk returns a tuple with the Nome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerfilSeguranca) GetNomeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Nome.Get(), o.Nome.IsSet()
}

// HasNome returns a boolean if a field has been set.
func (o *PerfilSeguranca) HasNome() bool {
	if o != nil && o.Nome.IsSet() {
		return true
	}

	return false
}

// SetNome gets a reference to the given NullableString and assigns it to the Nome field.
func (o *PerfilSeguranca) SetNome(v string) {
	o.Nome.Set(&v)
}
// SetNomeNil sets the value for Nome to be an explicit nil
func (o *PerfilSeguranca) SetNomeNil() {
	o.Nome.Set(nil)
}

// UnsetNome ensures that no value is present for Nome, not even an explicit nil
func (o *PerfilSeguranca) UnsetNome() {
	o.Nome.Unset()
}

// GetPerfilSegurancaPermissaos returns the PerfilSegurancaPermissaos field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerfilSeguranca) GetPerfilSegurancaPermissaos() []PerfilSegurancaPermissao {
	if o == nil  {
		var ret []PerfilSegurancaPermissao
		return ret
	}
	return o.PerfilSegurancaPermissaos
}

// GetPerfilSegurancaPermissaosOk returns a tuple with the PerfilSegurancaPermissaos field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerfilSeguranca) GetPerfilSegurancaPermissaosOk() (*[]PerfilSegurancaPermissao, bool) {
	if o == nil || o.PerfilSegurancaPermissaos == nil {
		return nil, false
	}
	return &o.PerfilSegurancaPermissaos, true
}

// HasPerfilSegurancaPermissaos returns a boolean if a field has been set.
func (o *PerfilSeguranca) HasPerfilSegurancaPermissaos() bool {
	if o != nil && o.PerfilSegurancaPermissaos != nil {
		return true
	}

	return false
}

// SetPerfilSegurancaPermissaos gets a reference to the given []PerfilSegurancaPermissao and assigns it to the PerfilSegurancaPermissaos field.
func (o *PerfilSeguranca) SetPerfilSegurancaPermissaos(v []PerfilSegurancaPermissao) {
	o.PerfilSegurancaPermissaos = v
}

// GetUtilizadorPerfilSegurancas returns the UtilizadorPerfilSegurancas field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PerfilSeguranca) GetUtilizadorPerfilSegurancas() []UtilizadorPerfilSeguranca {
	if o == nil  {
		var ret []UtilizadorPerfilSeguranca
		return ret
	}
	return o.UtilizadorPerfilSegurancas
}

// GetUtilizadorPerfilSegurancasOk returns a tuple with the UtilizadorPerfilSegurancas field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PerfilSeguranca) GetUtilizadorPerfilSegurancasOk() (*[]UtilizadorPerfilSeguranca, bool) {
	if o == nil || o.UtilizadorPerfilSegurancas == nil {
		return nil, false
	}
	return &o.UtilizadorPerfilSegurancas, true
}

// HasUtilizadorPerfilSegurancas returns a boolean if a field has been set.
func (o *PerfilSeguranca) HasUtilizadorPerfilSegurancas() bool {
	if o != nil && o.UtilizadorPerfilSegurancas != nil {
		return true
	}

	return false
}

// SetUtilizadorPerfilSegurancas gets a reference to the given []UtilizadorPerfilSeguranca and assigns it to the UtilizadorPerfilSegurancas field.
func (o *PerfilSeguranca) SetUtilizadorPerfilSegurancas(v []UtilizadorPerfilSeguranca) {
	o.UtilizadorPerfilSegurancas = v
}

func (o PerfilSeguranca) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Upd.IsSet() {
		toSerialize["upd"] = o.Upd.Get()
	}
	if o.Usr.IsSet() {
		toSerialize["usr"] = o.Usr.Get()
	}
	if o.Nome.IsSet() {
		toSerialize["nome"] = o.Nome.Get()
	}
	if o.PerfilSegurancaPermissaos != nil {
		toSerialize["perfilSegurancaPermissaos"] = o.PerfilSegurancaPermissaos
	}
	if o.UtilizadorPerfilSegurancas != nil {
		toSerialize["utilizadorPerfilSegurancas"] = o.UtilizadorPerfilSegurancas
	}
	return json.Marshal(toSerialize)
}

type NullablePerfilSeguranca struct {
	value *PerfilSeguranca
	isSet bool
}

func (v NullablePerfilSeguranca) Get() *PerfilSeguranca {
	return v.value
}

func (v *NullablePerfilSeguranca) Set(val *PerfilSeguranca) {
	v.value = val
	v.isSet = true
}

func (v NullablePerfilSeguranca) IsSet() bool {
	return v.isSet
}

func (v *NullablePerfilSeguranca) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerfilSeguranca(val *PerfilSeguranca) *NullablePerfilSeguranca {
	return &NullablePerfilSeguranca{value: val, isSet: true}
}

func (v NullablePerfilSeguranca) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerfilSeguranca) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


