/*
 * Petrolifera API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// OrdemServicoCompartimento struct for OrdemServicoCompartimento
type OrdemServicoCompartimento struct {
	Id *int64 `json:"id,omitempty"`
	Deleted *int32 `json:"deleted,omitempty"`
	Upd NullableTime `json:"upd,omitempty"`
	Usr NullableInt64 `json:"usr,omitempty"`
	RefOrdemServico NullableInt64 `json:"refOrdemServico,omitempty"`
	RefProduto NullableInt64 `json:"refProduto,omitempty"`
	RefCompartimento NullableInt64 `json:"refCompartimento,omitempty"`
	Tipo *TipoOrdemServicoCompartimento `json:"tipo,omitempty"`
	Terminado *bool `json:"terminado,omitempty"`
	OrdemServico *OrdemServico `json:"ordemServico,omitempty"`
	Produto *Produto `json:"produto,omitempty"`
	Compartimento *Compartimento `json:"compartimento,omitempty"`
}

// NewOrdemServicoCompartimento instantiates a new OrdemServicoCompartimento object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrdemServicoCompartimento() *OrdemServicoCompartimento {
	this := OrdemServicoCompartimento{}
	return &this
}

// NewOrdemServicoCompartimentoWithDefaults instantiates a new OrdemServicoCompartimento object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrdemServicoCompartimentoWithDefaults() *OrdemServicoCompartimento {
	this := OrdemServicoCompartimento{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrdemServicoCompartimento) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdemServicoCompartimento) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrdemServicoCompartimento) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OrdemServicoCompartimento) SetId(v int64) {
	o.Id = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *OrdemServicoCompartimento) GetDeleted() int32 {
	if o == nil || o.Deleted == nil {
		var ret int32
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdemServicoCompartimento) GetDeletedOk() (*int32, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *OrdemServicoCompartimento) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given int32 and assigns it to the Deleted field.
func (o *OrdemServicoCompartimento) SetDeleted(v int32) {
	o.Deleted = &v
}

// GetUpd returns the Upd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServicoCompartimento) GetUpd() time.Time {
	if o == nil || o.Upd.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.Upd.Get()
}

// GetUpdOk returns a tuple with the Upd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServicoCompartimento) GetUpdOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Upd.Get(), o.Upd.IsSet()
}

// HasUpd returns a boolean if a field has been set.
func (o *OrdemServicoCompartimento) HasUpd() bool {
	if o != nil && o.Upd.IsSet() {
		return true
	}

	return false
}

// SetUpd gets a reference to the given NullableTime and assigns it to the Upd field.
func (o *OrdemServicoCompartimento) SetUpd(v time.Time) {
	o.Upd.Set(&v)
}
// SetUpdNil sets the value for Upd to be an explicit nil
func (o *OrdemServicoCompartimento) SetUpdNil() {
	o.Upd.Set(nil)
}

// UnsetUpd ensures that no value is present for Upd, not even an explicit nil
func (o *OrdemServicoCompartimento) UnsetUpd() {
	o.Upd.Unset()
}

// GetUsr returns the Usr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServicoCompartimento) GetUsr() int64 {
	if o == nil || o.Usr.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Usr.Get()
}

// GetUsrOk returns a tuple with the Usr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServicoCompartimento) GetUsrOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Usr.Get(), o.Usr.IsSet()
}

// HasUsr returns a boolean if a field has been set.
func (o *OrdemServicoCompartimento) HasUsr() bool {
	if o != nil && o.Usr.IsSet() {
		return true
	}

	return false
}

// SetUsr gets a reference to the given NullableInt64 and assigns it to the Usr field.
func (o *OrdemServicoCompartimento) SetUsr(v int64) {
	o.Usr.Set(&v)
}
// SetUsrNil sets the value for Usr to be an explicit nil
func (o *OrdemServicoCompartimento) SetUsrNil() {
	o.Usr.Set(nil)
}

// UnsetUsr ensures that no value is present for Usr, not even an explicit nil
func (o *OrdemServicoCompartimento) UnsetUsr() {
	o.Usr.Unset()
}

// GetRefOrdemServico returns the RefOrdemServico field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServicoCompartimento) GetRefOrdemServico() int64 {
	if o == nil || o.RefOrdemServico.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefOrdemServico.Get()
}

// GetRefOrdemServicoOk returns a tuple with the RefOrdemServico field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServicoCompartimento) GetRefOrdemServicoOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefOrdemServico.Get(), o.RefOrdemServico.IsSet()
}

// HasRefOrdemServico returns a boolean if a field has been set.
func (o *OrdemServicoCompartimento) HasRefOrdemServico() bool {
	if o != nil && o.RefOrdemServico.IsSet() {
		return true
	}

	return false
}

// SetRefOrdemServico gets a reference to the given NullableInt64 and assigns it to the RefOrdemServico field.
func (o *OrdemServicoCompartimento) SetRefOrdemServico(v int64) {
	o.RefOrdemServico.Set(&v)
}
// SetRefOrdemServicoNil sets the value for RefOrdemServico to be an explicit nil
func (o *OrdemServicoCompartimento) SetRefOrdemServicoNil() {
	o.RefOrdemServico.Set(nil)
}

// UnsetRefOrdemServico ensures that no value is present for RefOrdemServico, not even an explicit nil
func (o *OrdemServicoCompartimento) UnsetRefOrdemServico() {
	o.RefOrdemServico.Unset()
}

// GetRefProduto returns the RefProduto field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServicoCompartimento) GetRefProduto() int64 {
	if o == nil || o.RefProduto.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefProduto.Get()
}

// GetRefProdutoOk returns a tuple with the RefProduto field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServicoCompartimento) GetRefProdutoOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefProduto.Get(), o.RefProduto.IsSet()
}

// HasRefProduto returns a boolean if a field has been set.
func (o *OrdemServicoCompartimento) HasRefProduto() bool {
	if o != nil && o.RefProduto.IsSet() {
		return true
	}

	return false
}

// SetRefProduto gets a reference to the given NullableInt64 and assigns it to the RefProduto field.
func (o *OrdemServicoCompartimento) SetRefProduto(v int64) {
	o.RefProduto.Set(&v)
}
// SetRefProdutoNil sets the value for RefProduto to be an explicit nil
func (o *OrdemServicoCompartimento) SetRefProdutoNil() {
	o.RefProduto.Set(nil)
}

// UnsetRefProduto ensures that no value is present for RefProduto, not even an explicit nil
func (o *OrdemServicoCompartimento) UnsetRefProduto() {
	o.RefProduto.Unset()
}

// GetRefCompartimento returns the RefCompartimento field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrdemServicoCompartimento) GetRefCompartimento() int64 {
	if o == nil || o.RefCompartimento.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RefCompartimento.Get()
}

// GetRefCompartimentoOk returns a tuple with the RefCompartimento field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrdemServicoCompartimento) GetRefCompartimentoOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefCompartimento.Get(), o.RefCompartimento.IsSet()
}

// HasRefCompartimento returns a boolean if a field has been set.
func (o *OrdemServicoCompartimento) HasRefCompartimento() bool {
	if o != nil && o.RefCompartimento.IsSet() {
		return true
	}

	return false
}

// SetRefCompartimento gets a reference to the given NullableInt64 and assigns it to the RefCompartimento field.
func (o *OrdemServicoCompartimento) SetRefCompartimento(v int64) {
	o.RefCompartimento.Set(&v)
}
// SetRefCompartimentoNil sets the value for RefCompartimento to be an explicit nil
func (o *OrdemServicoCompartimento) SetRefCompartimentoNil() {
	o.RefCompartimento.Set(nil)
}

// UnsetRefCompartimento ensures that no value is present for RefCompartimento, not even an explicit nil
func (o *OrdemServicoCompartimento) UnsetRefCompartimento() {
	o.RefCompartimento.Unset()
}

// GetTipo returns the Tipo field value if set, zero value otherwise.
func (o *OrdemServicoCompartimento) GetTipo() TipoOrdemServicoCompartimento {
	if o == nil || o.Tipo == nil {
		var ret TipoOrdemServicoCompartimento
		return ret
	}
	return *o.Tipo
}

// GetTipoOk returns a tuple with the Tipo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdemServicoCompartimento) GetTipoOk() (*TipoOrdemServicoCompartimento, bool) {
	if o == nil || o.Tipo == nil {
		return nil, false
	}
	return o.Tipo, true
}

// HasTipo returns a boolean if a field has been set.
func (o *OrdemServicoCompartimento) HasTipo() bool {
	if o != nil && o.Tipo != nil {
		return true
	}

	return false
}

// SetTipo gets a reference to the given TipoOrdemServicoCompartimento and assigns it to the Tipo field.
func (o *OrdemServicoCompartimento) SetTipo(v TipoOrdemServicoCompartimento) {
	o.Tipo = &v
}

// GetTerminado returns the Terminado field value if set, zero value otherwise.
func (o *OrdemServicoCompartimento) GetTerminado() bool {
	if o == nil || o.Terminado == nil {
		var ret bool
		return ret
	}
	return *o.Terminado
}

// GetTerminadoOk returns a tuple with the Terminado field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdemServicoCompartimento) GetTerminadoOk() (*bool, bool) {
	if o == nil || o.Terminado == nil {
		return nil, false
	}
	return o.Terminado, true
}

// HasTerminado returns a boolean if a field has been set.
func (o *OrdemServicoCompartimento) HasTerminado() bool {
	if o != nil && o.Terminado != nil {
		return true
	}

	return false
}

// SetTerminado gets a reference to the given bool and assigns it to the Terminado field.
func (o *OrdemServicoCompartimento) SetTerminado(v bool) {
	o.Terminado = &v
}

// GetOrdemServico returns the OrdemServico field value if set, zero value otherwise.
func (o *OrdemServicoCompartimento) GetOrdemServico() OrdemServico {
	if o == nil || o.OrdemServico == nil {
		var ret OrdemServico
		return ret
	}
	return *o.OrdemServico
}

// GetOrdemServicoOk returns a tuple with the OrdemServico field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdemServicoCompartimento) GetOrdemServicoOk() (*OrdemServico, bool) {
	if o == nil || o.OrdemServico == nil {
		return nil, false
	}
	return o.OrdemServico, true
}

// HasOrdemServico returns a boolean if a field has been set.
func (o *OrdemServicoCompartimento) HasOrdemServico() bool {
	if o != nil && o.OrdemServico != nil {
		return true
	}

	return false
}

// SetOrdemServico gets a reference to the given OrdemServico and assigns it to the OrdemServico field.
func (o *OrdemServicoCompartimento) SetOrdemServico(v OrdemServico) {
	o.OrdemServico = &v
}

// GetProduto returns the Produto field value if set, zero value otherwise.
func (o *OrdemServicoCompartimento) GetProduto() Produto {
	if o == nil || o.Produto == nil {
		var ret Produto
		return ret
	}
	return *o.Produto
}

// GetProdutoOk returns a tuple with the Produto field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdemServicoCompartimento) GetProdutoOk() (*Produto, bool) {
	if o == nil || o.Produto == nil {
		return nil, false
	}
	return o.Produto, true
}

// HasProduto returns a boolean if a field has been set.
func (o *OrdemServicoCompartimento) HasProduto() bool {
	if o != nil && o.Produto != nil {
		return true
	}

	return false
}

// SetProduto gets a reference to the given Produto and assigns it to the Produto field.
func (o *OrdemServicoCompartimento) SetProduto(v Produto) {
	o.Produto = &v
}

// GetCompartimento returns the Compartimento field value if set, zero value otherwise.
func (o *OrdemServicoCompartimento) GetCompartimento() Compartimento {
	if o == nil || o.Compartimento == nil {
		var ret Compartimento
		return ret
	}
	return *o.Compartimento
}

// GetCompartimentoOk returns a tuple with the Compartimento field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrdemServicoCompartimento) GetCompartimentoOk() (*Compartimento, bool) {
	if o == nil || o.Compartimento == nil {
		return nil, false
	}
	return o.Compartimento, true
}

// HasCompartimento returns a boolean if a field has been set.
func (o *OrdemServicoCompartimento) HasCompartimento() bool {
	if o != nil && o.Compartimento != nil {
		return true
	}

	return false
}

// SetCompartimento gets a reference to the given Compartimento and assigns it to the Compartimento field.
func (o *OrdemServicoCompartimento) SetCompartimento(v Compartimento) {
	o.Compartimento = &v
}

func (o OrdemServicoCompartimento) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Upd.IsSet() {
		toSerialize["upd"] = o.Upd.Get()
	}
	if o.Usr.IsSet() {
		toSerialize["usr"] = o.Usr.Get()
	}
	if o.RefOrdemServico.IsSet() {
		toSerialize["refOrdemServico"] = o.RefOrdemServico.Get()
	}
	if o.RefProduto.IsSet() {
		toSerialize["refProduto"] = o.RefProduto.Get()
	}
	if o.RefCompartimento.IsSet() {
		toSerialize["refCompartimento"] = o.RefCompartimento.Get()
	}
	if o.Tipo != nil {
		toSerialize["tipo"] = o.Tipo
	}
	if o.Terminado != nil {
		toSerialize["terminado"] = o.Terminado
	}
	if o.OrdemServico != nil {
		toSerialize["ordemServico"] = o.OrdemServico
	}
	if o.Produto != nil {
		toSerialize["produto"] = o.Produto
	}
	if o.Compartimento != nil {
		toSerialize["compartimento"] = o.Compartimento
	}
	return json.Marshal(toSerialize)
}

type NullableOrdemServicoCompartimento struct {
	value *OrdemServicoCompartimento
	isSet bool
}

func (v NullableOrdemServicoCompartimento) Get() *OrdemServicoCompartimento {
	return v.value
}

func (v *NullableOrdemServicoCompartimento) Set(val *OrdemServicoCompartimento) {
	v.value = val
	v.isSet = true
}

func (v NullableOrdemServicoCompartimento) IsSet() bool {
	return v.isSet
}

func (v *NullableOrdemServicoCompartimento) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrdemServicoCompartimento(val *OrdemServicoCompartimento) *NullableOrdemServicoCompartimento {
	return &NullableOrdemServicoCompartimento{value: val, isSet: true}
}

func (v NullableOrdemServicoCompartimento) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrdemServicoCompartimento) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


